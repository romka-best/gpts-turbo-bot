import random
import statistics
from typing import Protocol, Dict, List

from bot.database.models.common import Currency, Model
from bot.database.models.generation import GenerationReaction
from bot.database.models.package import PackageType
from bot.database.models.subscription import Subscription, SubscriptionType, SubscriptionPeriod, SubscriptionStatus
from bot.database.models.transaction import TransactionType, ServiceType
from bot.database.models.user import UserGender
from bot.helpers.calculate_percentage_difference import calculate_percentage_difference


class Texts(Protocol):
    START: str
    COMMANDS: str
    INFO: str
    INFO_TEXT_MODELS: str
    INFO_IMAGE_MODELS: str
    INFO_MUSIC_MODELS: str
    INFO_CHATGPT: str
    INFO_CLAUDE: str
    INFO_DALL_E: str
    INFO_MIDJOURNEY: str
    INFO_FACE_SWAP: str
    INFO_MUSIC_GEN: str
    INFO_SUNO: str

    ADMIN_INFO = "üë®‚Äçüíª –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∞–¥–º–∏–Ω üë©‚Äçüíª"
    BAN_INFO = "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å/—Ä–∞–∑–±–∞–Ω–∏—Ç—å ‚õîÔ∏è"
    BAN_SUCCESS = "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üìõ"
    UNBAN_SUCCESS = "–í—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üî•"

    TEXT_MODELS: str
    IMAGE_MODELS: str
    MUSIC_MODELS: str

    # Feedback
    FEEDBACK: str
    FEEDBACK_SUCCESS: str
    FEEDBACK_ADMIN_APPROVE = "–û–¥–æ–±—Ä–∏—Ç—å ‚úÖ"
    FEEDBACK_ADMIN_DENY = "–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå"
    FEEDBACK_APPROVED: str
    FEEDBACK_APPROVED_WITH_LIMIT_ERROR: str
    FEEDBACK_DENIED: str

    # Profile
    TELL_ME_YOUR_GENDER: str
    YOUR_GENDER: str
    UNSPECIFIED: str
    MALE: str
    FEMALE: str
    SEND_ME_YOUR_PICTURE: str
    UPLOAD_PHOTO: str
    UPLOADING_PHOTO: str
    NO_FACE_IN_PHOTO: str
    CHANGE_PHOTO: str
    CHANGE_PHOTO_SUCCESS: str
    CHOOSE_GENDER: str
    CHANGE_GENDER: str
    OPEN_BONUS_INFO: str
    OPEN_BUY_SUBSCRIPTIONS_INFO: str
    OPEN_BUY_PACKAGES_INFO: str
    CANCEL_SUBSCRIPTION: str
    CANCEL_SUBSCRIPTION_CONFIRMATION: str
    CANCEL_SUBSCRIPTION_SUCCESS: str
    NO_ACTIVE_SUBSCRIPTION: str

    # Language
    LANGUAGE: str
    CHOOSE_LANGUAGE: str

    # Bonus
    BONUS_ACTIVATED_SUCCESSFUL: str
    BONUS_CHOOSE_PACKAGE: str
    INVITE_FRIEND: str
    LEAVE_FEEDBACK: str
    CASH_OUT: str
    REFERRAL_SUCCESS: str
    REFERRAL_LIMIT_ERROR: str

    # Blast
    BLAST_CHOOSE_LANGUAGE = """
üì£ <b>–ü–æ—Ä–∞ –¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É!</b>

–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Å–µ–º —Å—Ä–∞–∑—É:
"""
    BLAST_WRITE_IN_CHOSEN_LANGUAGE = """
‚úçÔ∏è <b>–ü–æ—Ä–∞ —Å–æ–∑–¥–∞—Ç—å –≤–∞—à–µ –ø–æ—Å–ª–∞–Ω–∏–µ!</b> üöÄ

–í—ã –≤—ã–±—Ä–∞–ª–∏ —è–∑—ã–∫, —Ç–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –≤–ª–æ–∂–∏—Ç—å –¥—É—à—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ!

–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ç—Ä–æ–Ω–µ—Ç —Å–µ—Ä–¥—Ü–∞ –≤–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ä–∞–∑–≤–µ—Å–µ–ª–∏—Ç –∏—Ö –∏–ª–∏ –¥–∞–∂–µ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç –Ω–∞ –Ω–æ–≤—ã–µ –ø–æ–¥–≤–∏–≥–∏. –ü–æ–º–Ω–∏—Ç–µ, –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ ‚Äì —ç—Ç–æ –∫–∏—Å—Ç—å, –∞ –≤–∞—à —Ç–µ–∫—Å—Ç ‚Äì –ø–æ–ª–æ—Ç–Ω–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ. –í–ø–µ—Ä—ë–¥, –Ω–∞–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –º–∏—Ä –∫—Ä–∞—Å–∫–∞–º–∏ –≤–∞—à–µ–≥–æ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è! üåà‚ú®
"""
    BLAST_WRITE_IN_DEFAULT_LANGUAGE = """
üöÄ <b>–í—Ä–µ–º—è –¥–ª—è –º–∞—Å—à—Ç–∞–±–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏!</b> üåç

–í—ã –≤—ã–±—Ä–∞–ª–∏ "–î–ª—è –≤—Å–µ—Ö" –∏ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç –∫–∞–∂–¥–æ–≥–æ –º–æ–µ–≥–æ —É–≥–æ–ª–∫–∞, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —è–∑—ã–∫–æ–≤—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∏ —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–µ–¥—É –µ–≥–æ –¥–ª—è –≤—Å–µ—Ö –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –°–æ–∑–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç, —Ä–∞–∑–≤–ª–µ—á–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç - –≤–µ–¥—å –æ–Ω–æ –ø–æ–ª–µ—Ç–∏—Ç –∫ —Å–µ—Ä–¥—Ü–∞–º –∏ —É–º–∞–º –ª—é–¥–µ–π –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.

–ü–æ–º–Ω–∏—Ç–µ, –≤–∞—à–∏ —Å–ª–æ–≤–∞ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω–∏—Ç—å —á–µ–π-—Ç–æ –¥–µ–Ω—å –∫ –ª—É—á—à–µ–º—É! üåü
"""
    BLAST_SUCCESS = """
üéâ <b>–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</b> üíå

–¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –≤ –ø—É—Ç–∏ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –≥–æ—Ç–æ–≤–æ —Ä–∞–∑–±—É–¥–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å –∏ –≤—ã–∑–≤–∞—Ç—å —É–ª—ã–±–∫–∏. –¢—ã —Å–¥–µ–ª–∞–ª –Ω–∞—Å—Ç–æ—è—â–∏–π —à–∞–≥ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –≤–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç–∏ –∏ –æ–±—â–µ–Ω–∏—é. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –∞–¥–º–∏–Ω-–≤–æ–ª—à–µ–±–Ω–∏–∫, —Ç–≤–æ—ë —Ç–≤–æ—Ä–µ–Ω–∏–µ —Å–∫–æ—Ä–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É! üåü

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –¥–µ–ª–∞–µ—à—å –º–µ–Ω—è —è—Ä—á–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –∫–∞–∂–¥—ã–º —Å–≤–æ–∏–º –¥–µ–π—Å—Ç–≤–∏–µ–º! ‚ú®
"""

    # Promo code
    PROMO_CODE_ACTIVATE: str
    PROMO_CODE_INFO: str
    PROMO_CODE_INFO_ADMIN = """
üîë <b>–í—Ä–µ–º—è —Å–æ–∑–¥–∞—Ç—å –º–∞–≥–∏—é —Å –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏!</b> ‚ú®

–í—ã–±–µ—Ä–∏, –¥–ª—è —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥:
üå† <b>–ü–æ–¥–ø–∏—Å–∫–∞</b> - –æ—Ç–∫—Ä–æ–π –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É
üé® <b>–ü–∞–∫–µ—Ç</b> - –¥–æ–±–∞–≤—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è AI
ü™ô <b>–°–∫–∏–¥–∫–∞</b> - –¥–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–µ—à–µ–≤–ª–µ

–ù–∞–∂–º–∏ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –∏ –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é! üöÄ
"""
    PROMO_CODE_SUCCESS: str
    PROMO_CODE_SUCCESS_ADMIN = """
üåü <b>–í–∞—É!</b>

–¢–≤–æ–π <b>–ø—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω</b> –∏ –≥–æ—Ç–æ–≤ –∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—é –≤ –∫–∞—Ä–º–∞–Ω—ã –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. üöÄ
–≠—Ç–æ—Ç –º–∞–ª–µ–Ω—å–∫–∏–π –∫–æ–¥–∏–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ä–∞–¥–æ—Å—Ç—å –∫–æ–º—É-—Ç–æ —Ç–∞–º!

üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–æ–ª—à–µ–±–Ω–∏–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤!
"""
    PROMO_CODE_CHOOSE_SUBSCRIPTION_ADMIN = """
üåü <b>–í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞!</b> üéÅ

–í—ã–±–µ—Ä–∏ —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø:
- <b>STANDARD</b> ‚≠ê
- <b>VIP</b> üî•
- <b>PREMIUM</b> üíé

–í—ã–±–µ—Ä–∏ –∏ –Ω–∞–∂–º–∏, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –≤–æ–ª—à–µ–±–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞! ‚ú®
"""
    PROMO_CODE_CHOOSE_PACKAGE_ADMIN = """
üåü <b>–í—ã–±–∏—Ä–∞–µ–º –ø–∞–∫–µ—Ç –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞!</b> üéÅ

–í—ã–±–µ—Ä–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–∞–∫–µ—Ç üëá
"""
    PROMO_CODE_CHOOSE_DISCOUNT_ADMIN = """
üåü <b>–í—ã–±–∏—Ä–∞–µ–º —Å–∫–∏–¥–∫—É –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞!</b> üéÅ

–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–∫–∏–¥–∫—É –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1% –¥–æ 50%, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º üëá
"""
    PROMO_CODE_CHOOSE_NAME_ADMIN = """
üñãÔ∏è <b>–ü—Ä–∏–¥—É–º–∞–π –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞</b> ‚ú®

–°–µ–π—á–∞—Å —Ç—ã –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–æ–ª—à–µ–±–Ω–∏–∫, —Å–æ–∑–¥–∞—é—â–∏–π –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ! ‚ú®üßô‚Äç
–ù–∞–ø–∏—à–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ–µ—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ç–≤–æ–µ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞.

üî† –ò—Å–ø–æ–ª—å–∑—É–π –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –Ω–æ –ø–æ–º–Ω–∏ –æ –≤–æ–ª—à–µ–±—Å—Ç–≤–µ –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏. –ù–µ –±–æ–π—Å—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!
"""
    PROMO_CODE_CHOOSE_DATE = """
üìÖ <b>–í—Ä–µ–º—è –¥–ª—è –≤–æ–ª—à–µ–±—Å—Ç–≤–∞!</b> ü™Ñ

–í–≤–µ–¥–∏ –¥–∞—Ç—É, –¥–æ –∫–æ—Ç–æ—Ä–æ–π —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –±—É–¥–µ—Ç —Ä–∞–∑–Ω–æ—Å–∏—Ç—å —Å—á–∞—Å—Ç—å–µ –∏ —É–¥–∏–≤–ª–µ–Ω–∏–µ!
–ü–æ–º–Ω–∏, –Ω—É–∂–µ–Ω —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞–ø—Ä–∏–º–µ—Ä, 25.12.2023 - –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–æ–≥–æ —Å—é—Ä–ø—Ä–∏–∑–∞! üéÑ

–¢–∞–∫ —á—Ç–æ –≤–ø–µ—Ä—ë–¥, –≤—ã–±–∏—Ä–∞–π –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –º–∞–≥–∏—è –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è üåü
"""
    PROMO_CODE_NAME_EXISTS_ERROR = """
üö´ <b>–û–π-–æ–π, —Ç–∞–∫–æ–π –∫–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!</b> ü§ñ

–ö–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –∏–Ω–Ω–æ–≤–∞—Ç–æ—Ä, —Ç—ã —Å–æ–∑–¥–∞–ª –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –∫—Ç–æ-—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª! –ù—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –µ—â—ë –±–æ–ª–µ–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞, –≤–µ–¥—å –≤ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ –Ω–µ—Ç –≥—Ä–∞–Ω–∏—Ü!

–ü–æ–∫–∞–∂–∏ —Å–≤–æ—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å. –£–≤–µ—Ä–µ–Ω, –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –ø–æ–ª—É—á–∏—Ç—Å—è!
"""
    PROMO_CODE_DATE_VALUE_ERROR = """
üö´ <b>–£–ø—Å!</b>

–ö–∞–∂–µ—Ç—Å—è, –¥–∞—Ç–∞ –∑–∞–±–ª—É–¥–∏–ª–∞—Å—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –∏ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Å–≤–æ–π —Ñ–æ—Ä–º–∞—Ç üìÖ

–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑, –Ω–æ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞–ø—Ä–∏–º–µ—Ä, 25.12.2023. –¢–æ—á–Ω–æ—Å—Ç—å ‚Äî –∑–∞–ª–æ–≥ —É—Å–ø–µ—Ö–∞!
"""
    PROMO_CODE_ALREADY_HAVE_SUBSCRIPTION: str
    PROMO_CODE_EXPIRED_ERROR: str
    PROMO_CODE_NOT_FOUND_ERROR: str
    PROMO_CODE_ALREADY_USED_ERROR: str

    # Statistics
    STATISTICS_INFO = """
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞ –ø–æ–¥—Ö–æ–¥–µ!</b>

–ü–æ—Ä–∞ –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä —Ü–∏—Ñ—Ä –∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤. –í—ã–±–µ—Ä–∏ –ø–µ—Ä–∏–æ–¥, –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, –∫–∞–∫ –Ω–∞—à –±–æ—Ç –ø–æ–∫–æ—Ä—è–ª AI-–≤–µ—Ä—à–∏–Ω—ã üöÄ:
1Ô∏è‚É£ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å</b> - –£–∑–Ω–∞–π, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ —Å–µ–≥–æ–¥–Ω—è! –ë—ã–ª–∏ –ª–∏ —Ä–µ–∫–æ—Ä–¥—ã?
2Ô∏è‚É£ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é</b> - –ù–µ–¥–µ–ª—å–Ω–∞—è –¥–æ–∑–∞ –¥–∞–Ω–Ω—ã—Ö. –ö–∞–∫–æ–≤—ã –±—ã–ª–∏ —Ç—Ä–µ–Ω–¥—ã?
3Ô∏è‚É£ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü</b> - –ú–µ—Å—è—Ü –≤ —Ü–∏—Ñ—Ä–∞—Ö. –°–∫–æ–ª—å–∫–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –º—ã –Ω–∞–∫–æ–ø–∏–ª–∏?
4Ô∏è‚É£ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è</b> - –í–∑–≥–ª—è–¥ –≤ –ø—Ä–æ—à–ª–æ–µ. –û—Ç–∫—É–¥–∞ –º—ã –Ω–∞—á–∞–ª–∏ –∏ –∫—É–¥–∞ –ø—Ä–∏—à–ª–∏?
5Ô∏è‚É£ <b>–ó–∞–ø–∏—Å–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é</b> - –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä—É–π –Ω–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ –ø–æ-—á–µ—Å—Ç–Ω–æ–º—É!

–í—ã–±–∏—Ä–∞–π –∫–Ω–æ–ø–∫—É –∏ –≤–ø–µ—Ä—ë–¥, –∫ –∑–Ω–∞–Ω–∏—è–º! üïµÔ∏è‚Äç‚ôÇÔ∏èüîç
"""
    STATISTICS_WRITE_TRANSACTION = """
üßæ <b>–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!</b>

–•–º–º... –ö–∞–∂–µ—Ç—Å—è, –ø—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø–æ–¥–≤–µ—Å—Ç–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏—Ç–æ–≥–∏! üïµÔ∏è‚Äç‚ôÇÔ∏èüíº –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π —Å—Ç–æ–∏—Ç –≤—ã–±–æ—Ä:
- –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "üìà –ó–∞–ø–∏—Å–∞—Ç—å –¥–æ—Ö–æ–¥", –µ—Å–ª–∏ –Ω–∞—à–∏ –∫–∞–∑–Ω—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏—Å—å –∏ –º—ã –±–æ–≥–∞—á–µ –Ω–∞ –ø–∞—Ä—É –∑–æ–ª–æ—Ç—ã—Ö –º–æ–Ω–µ—Ç!
- –ò–ª–∏ –≤—ã–±–µ—Ä–∏ "üìâ –ó–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—Ö–æ–¥", –µ—Å–ª–∏ –ø—Ä–∏—à–ª–æ—Å—å —Ä–∞—Å–∫–æ—à–µ–ª–∏—Ç—å—Å—è –Ω–∞ –≤–æ–ª—à–µ–±–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â—ë –Ω—É–∂–Ω–æ–µ.

–ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –≤–ø–µ—Ä—ë–¥, –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º! üí´üöÄ
"""
    STATISTICS_CHOOSE_SERVICE = """
üîç <b>–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!</b>

–û—É, –ø–æ—Ö–æ–∂–µ, –¥–µ–ª–æ –¥–æ—à–ª–æ –¥–æ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å–µ—Ä–≤–∏—Å–∞! üåüüìö –¢—É—Ç –≤—Å—ë, –∫–∞–∫ –≤ –º–∞–≥–∞–∑–∏–Ω–µ —á—É–¥–µ—Å

–í—ã–±–∏—Ä–∞–π, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è, –∏ –ø—É—Å—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –±—É–¥—É—Ç —Ç–æ—á–Ω—ã, –∫–∞–∫ —É –∑–≤—ë–∑–¥–Ω–æ–≥–æ –∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ–∞! üó∫Ô∏è‚ú®
"""
    STATISTICS_CHOOSE_CURRENCY = """
üí∞ <b>–í—Ä–µ–º—è –≤—ã–±–∏—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É!</b>

–î–ª—è –ø–æ–ª–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω—ã –Ω–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤–∞–ª—é—Ç—É —ç—Ç–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π. –¢–∞–∫ —á—Ç–æ, –≤ –∫–∞–∫–æ–π –≤–∞–ª—é—Ç–µ –º—ã –∫—É–ø–∞–ª–∏—Å—å, –∫–æ–≥–¥–∞ —Å–æ–≤–µ—Ä—à–∞–ª–∏—Å—å —ç—Ç–∏ —Å–¥–µ–ª–∫–∏? –†—É–±–ª–∏, –¥–æ–ª–ª–∞—Ä—ã, –∞ –º–æ–∂–µ—Ç –±—ã—Ç—å, –∑–æ–ª–æ—Ç—ã–µ –¥—É–±–ª–æ–Ω—ã? üòÑ

–í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É —Å –Ω—É–∂–Ω–æ–π –≤–∞–ª—é—Ç–æ–π, —á—Ç–æ–±—ã –º—ã –∑–∞–Ω–µ—Å–ª–∏ –≤—Å—ë –ø–æ –∫–Ω–∏–∂–∫–µ —Ç–æ—á–Ω–æ –∏ –±–µ–∑ –æ—à–∏–±–æ–∫. –≠—Ç–æ –≤–∞–∂–Ω–æ, –≤–µ–¥—å –¥–∞–∂–µ –ø–∏—Ä–∞—Ç—ã –Ω–µ —à—É—Ç–∏–ª–∏ —Å —É—á—ë—Ç–æ–º —Å–≤–æ–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â! üí∏üè¥‚Äç‚ò†Ô∏è
"""
    STATISTICS_SERVICE_QUANTITY = """
‚úçÔ∏è <b>–ü–æ—Ä–∞ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π!</b>

–ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π

üî¢üöÄ –ü–æ–º–Ω–∏, –∫–∞–∂–¥–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è - —ç—Ç–æ —à–∞–≥ –∫ –Ω–∞—à–µ–º—É –æ–±—â–µ–º—É —É—Å–ø–µ—Ö—É. –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏ –Ω–∏ –æ–¥–Ω–æ–π!
"""
    STATISTICS_SERVICE_AMOUNT = """
ü§ë <b>–î–∞–≤–∞–π –ø–æ—Å—á–∏—Ç–∞–µ–º –∫–æ–ø–µ–π–∫–∏!</b>

–ù–∞–ø–∏—à–∏ –º–Ω–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ù–æ –ø–æ–º–Ω–∏, –∫–∞–∂–¥–∞—è –∫–æ–ø–µ–π–∫–∞ (–∏–ª–∏ —Ü–µ–Ω—Ç) –Ω–∞ —Å—á–µ—Ç—É! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º–∏ –¥—Ä–æ–±—è–º–∏ —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É. –ù–∞–ø—Ä–∏–º–µ—Ä, 999.99

–í–≤–æ–¥–∏ —Ü–∏—Ñ—Ä—ã –∞–∫–∫—É—Ä–∞—Ç–Ω–æ, –∫–∞–∫ –µ—Å–ª–∏ –±—ã —Ç—ã —Å—á–∏—Ç–∞–ª –∑–æ–ª–æ—Ç—ã–µ –º–æ–Ω–µ—Ç—ã –Ω–∞ –ø–∏—Ä–∞—Ç—Å–∫–æ–º –∫–æ—Ä–∞–±–ª–µ. –í –∫–æ–Ω—Ü–µ –∫–æ–Ω—Ü–æ–≤, —Ç–æ—á–Ω–æ—Å—Ç—å ‚Äì –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å –∫–æ—Ä–æ–ª–µ–π... –∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–æ–≤! üè¥‚Äç‚ò†Ô∏èüìñ
"""
    STATISTICS_SERVICE_DATE = """
üìÖ <b>–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à—Ç—Ä–∏—Ö: –î–∞—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏!</b>

–ù–∞–ø–∏—à–∏ –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–∏ —ç—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –§–æ—Ä–º–∞—Ç? –ü—Ä–æ—Å—Ç–æ –∏ —è—Å–Ω–æ: "–î–î.–ú–ú.–ì–ì–ì–ì". –ù–∞–ø—Ä–∏–º–µ—Ä, "01.04.2024" –∏–ª–∏ "25.12.2023". –≠—Ç–∞ –¥–∞—Ç–∞ - –∫–ª—é—á –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å—É–Ω–¥—É–∫–∞ —Å —Å–æ–∫—Ä–æ–≤–∏—â–∞–º–∏.

üï∞Ô∏è‚ú® –ü–æ–º–Ω–∏, —Ç–æ—á–Ω–∞—è –¥–∞—Ç–∞ - —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–∞, —ç—Ç–æ –º–∞—Ä–∫–µ—Ä—ã –Ω–∞—à–µ–≥–æ –ø—É—Ç–∏. –ü–æ –Ω–∏–º –º—ã –±—É–¥–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞—à–µ –±—É–¥—É—â–µ–µ!
"""
    STATISTICS_SERVICE_DATE_VALUE_ERROR = """
ü§î <b>–£–ø—Å, –∫–∞–∂–µ—Ç—Å—è, –¥–∞—Ç–∞ —Ä–µ—à–∏–ª–∞ –ø–æ—à–∞–ª–∏—Ç—å!</b>

–û–π-–æ–π, –∫–∞–∂–µ—Ç—Å—è, –º—ã –Ω–µ–º–Ω–æ–≥–æ –∑–∞–ø—É—Ç–∞–ª–∏—Å—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö! –í–≤–µ–¥—ë–Ω–Ω–∞—è –¥–∞—Ç–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É "–î–î.–ú–ú.–ì–ì–ì–ì". –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑, –≤–µ–¥—å –¥–∞–∂–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–∞—à–∏–Ω—ã —É –Ω–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç, —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ –≤ –±—É–¥—É—â–µ–º.

üóìÔ∏è‚úèÔ∏è –ò—Ç–∞–∫, –¥–∞–≤–∞–π —Å–Ω–æ–≤–∞: –∫–æ–≥–¥–∞ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ —ç—Ç–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —á—É–¥–æ?
"""
    STATISTICS_WRITE_TRANSACTION_SUCCESSFUL = """
üéâ <b>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–∞! –í–æ—Ç —ç—Ç–æ –¥–∞, –º—ã –≤ –±–∏–∑–Ω–µ—Å–µ!</b>

–£—Ä–∞-—É—Ä–∞! –í–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–∞–Ω—ë–≤—Ä—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω—ã –≤ –Ω–∞—à–∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Ö—Ä–æ–Ω–∏–∫–∏. –¢–µ–ø–µ—Ä—å —ç—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –±–ª–µ—Å—Ç–∏—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —Å–ª–æ–≤–Ω–æ –∑–≤–µ–∑–¥–∞ –Ω–∞ –Ω–µ–±–æ—Å–∫–ª–æ–Ω–µ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏!

üìöüí∞ –ë–ª–∞–≥–æ–¥–∞—Ä—é –≤–∞—Å –∑–∞ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å –∏ —Ç–æ—á–Ω–æ—Å—Ç—å. –ù–∞—à–∏ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —ç–ª—å—Ñ—ã —É–∂–µ —Ç–∞–Ω—Ü—É—é—Ç —Ä–∞–¥–æ—Å—Ç—å. –ö–∞–∂–µ—Ç—Å—è, –≤–∞—à–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º—É–¥—Ä–æ—Å—Ç—å –¥–æ—Å—Ç–æ–π–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–ª–∞–≤—ã –≤ –∫–Ω–∏–≥–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!
"""

    # AI
    CHATGPT = "üí≠ ChatGPT"
    CHATGPT3_TURBO = "‚úâÔ∏è ChatGPT-3.5 Turbo"
    CHATGPT4_TURBO = "üß† ChatGPT-4.0 Turbo"
    CHATGPT4_OMNI = "üí• ChatGPT-4.0 Omni"
    CLAUDE = "üìÑ Claude"
    CLAUDE_3_SONNET = "üí´ Claude 3 Sonnet"
    CLAUDE_3_OPUS = "üöÄ Claude 3 Opus"
    DALL_E = "üñºÔ∏è DALL-E"
    MIDJOURNEY = "üé® Midjourney"
    FACE_SWAP = "üì∑Ô∏è FaceSwap"
    MUSIC_GEN = "üéµ MusicGen"
    SUNO = "üé∏ Suno"
    MODE: str
    CHOOSE_CHATGPT_MODEL: str
    CHOOSE_CLAUDE_MODEL: str
    SWITCHED_TO_CHATGPT3_TURBO: str
    SWITCHED_TO_CHATGPT4_TURBO: str
    SWITCHED_TO_CHATGPT4_OMNI: str
    SWITCHED_TO_CLAUDE_3_SONNET: str
    SWITCHED_TO_CLAUDE_3_OPUS: str
    SWITCHED_TO_DALL_E: str
    SWITCHED_TO_MIDJOURNEY: str
    SWITCHED_TO_FACE_SWAP: str
    SWITCHED_TO_MUSIC_GEN: str
    SWITCHED_TO_SUNO: str
    ALREADY_SWITCHED_TO_THIS_MODEL: str
    REQUEST_FORBIDDEN_ERROR: str
    PHOTO_FORBIDDEN_ERROR: str
    ALBUM_FORBIDDEN_ERROR: str
    VIDEO_FORBIDDEN_ERROR: str
    DOCUMENT_FORBIDDEN_ERROR: str
    STICKER_FORBIDDEN_ERROR: str
    ALREADY_MAKE_REQUEST: str
    READY_FOR_NEW_REQUEST: str
    CONTINUE_GENERATING: str
    REACHED_USAGE_LIMIT: str
    IMAGE_SUCCESS: str

    # Examples
    CHATGPT4_OMNI_EXAMPLE: str
    CLAUDE_3_OPUS_EXAMPLE: str
    MIDJOURNEY_EXAMPLE: str
    SUNO_EXAMPLE: str

    PHOTO_FEATURE_FORBIDDEN: str

    # Midjourney
    MIDJOURNEY_ALREADY_CHOSE_UPSCALE: str

    # Suno
    SUNO_INFO: str
    SUNO_SIMPLE_MODE: str
    SUNO_CUSTOM_MODE: str
    SUNO_SIMPLE_MODE_PROMPT: str
    SUNO_CUSTOM_MODE_LYRICS: str
    SUNO_CUSTOM_MODE_GENRES: str
    SUNO_START_AGAIN: str
    SUNO_TRY_LATER: str
    SUNO_TOO_MANY_WORDS: str
    SUNO_VALUE_ERROR: str

    # MusicGen
    MUSIC_GEN_INFO: str
    MUSIC_GEN_TYPE_SECONDS: str
    MUSIC_GEN_MIN_ERROR: str
    SECONDS_30: str
    SECONDS_60: str
    SECONDS_180: str

    # Settings
    SETTINGS_CHOOSE_MODEL_TYPE: str
    SETTINGS_CHOOSE_MODEL: str
    SHOW_THE_NAME_OF_THE_CHATS: str
    SHOW_THE_NAME_OF_THE_ROLES: str
    SHOW_USAGE_QUOTA_IN_MESSAGES: str
    VOICE_MESSAGES: str
    TURN_ON_VOICE_MESSAGES_FROM_RESPONDS: str
    LISTEN_VOICES: str

    # Voice
    VOICE_MESSAGES_FORBIDDEN: str

    # Payment
    BUY: str
    CHANGE_CURRENCY: str
    YOOKASSA_PAYMENT_METHOD: str
    PAY_SELECTION_PAYMENT_METHOD: str
    TELEGRAM_STARS_PAYMENT_METHOD: str
    CRYPTO_PAYMENT_METHOD: str
    CHOOSE_PAYMENT_METHOD: str
    PROCEED_TO_PAY: str

    # Subscription
    MONTH_1: str
    MONTHS_3: str
    MONTHS_6: str
    MONTHS_12: str
    DISCOUNT: str
    NO_DISCOUNT: str
    SUBSCRIPTION: str
    SUBSCRIPTION_SUCCESS: str
    SUBSCRIPTION_RESET: str
    SUBSCRIPTION_END: str
    PACKAGES_END: str
    CHATS_RESET: str

    # Package
    PACKAGE: str
    PACKAGES: str
    SHOPPING_CART: str
    ADD_TO_CART: str
    BUY_NOW: str
    REMOVE_FROM_CART: str
    GO_TO_CART: str
    CONTINUE_SHOPPING: str
    PROCEED_TO_CHECKOUT: str
    CLEAR_CART: str
    ADD_TO_CART_OR_BUY_NOW: str
    ADDED_TO_CART: str
    GO_TO_CART_OR_CONTINUE_SHOPPING: str
    GPT3_REQUESTS: str
    GPT3_REQUESTS_DESCRIPTION: str
    GPT4_REQUESTS: str
    GPT4_REQUESTS_DESCRIPTION: str
    GPT4_OMNI_REQUESTS: str
    GPT4_OMNI_REQUESTS_DESCRIPTION: str
    CLAUDE_3_SONNET_REQUESTS: str
    CLAUDE_3_SONNET_REQUESTS_DESCRIPTION: str
    CLAUDE_3_OPUS_REQUESTS: str
    CLAUDE_3_OPUS_REQUESTS_DESCRIPTION: str
    THEMATIC_CHATS: str
    THEMATIC_CHATS_DESCRIPTION: str
    DALL_E_REQUESTS: str
    DALL_E_REQUESTS_DESCRIPTION: str
    MIDJOURNEY_REQUESTS: str
    MIDJOURNEY_REQUESTS_DESCRIPTION: str
    FACE_SWAP_REQUESTS: str
    FACE_SWAP_REQUESTS_DESCRIPTION: str
    MUSIC_GEN_REQUESTS: str
    MUSIC_GEN_REQUESTS_DESCRIPTION: str
    SUNO_REQUESTS: str
    SUNO_REQUESTS_DESCRIPTION: str
    ACCESS_TO_CATALOG: str
    ACCESS_TO_CATALOG_DESCRIPTION: str
    ANSWERS_AND_REQUESTS_WITH_VOICE_MESSAGES: str
    ANSWERS_AND_REQUESTS_WITH_VOICE_MESSAGES_DESCRIPTION: str
    FAST_ANSWERS: str
    FAST_ANSWERS_DESCRIPTION: str
    MIN_ERROR: str
    MAX_ERROR: str
    VALUE_ERROR: str
    PACKAGE_SUCCESS: str
    PACKAGES_SUCCESS: str

    # Catalog
    MANAGE_CATALOG: str
    CATALOG: str
    CATALOG_FORBIDDEN_ERROR: str
    CATALOG_MANAGE = """
üé≠ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ä–æ–ª–µ–π</b> üåü

–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:
üîß <b>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ä–æ–ª—å</b>: –î–∞–π –≤–æ–ª—é —Ñ–∞–Ω—Ç–∞–∑–∏–∏ –∏ —Å–æ–∑–¥–∞–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞!
‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ</b>: –ü—Ä–∏–≤–Ω–µ—Å–∏ —Å–≤–æ—ë –≤–∏–¥–µ–Ω–∏–µ –≤ —É–∂–µ –∑–Ω–∞–∫–æ–º—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.
üóëÔ∏è <b>–£–¥–∞–ª–∏—Ç—å –Ω–µ–Ω—É–∂–Ω–æ–µ</b>: –ò–Ω–æ–≥–¥–∞ –ø—Ä–æ—â–∞–Ω–∏–µ - —ç—Ç–æ –Ω–∞—á–∞–ª–æ —á–µ–≥–æ-—Ç–æ –Ω–æ–≤–æ–≥–æ.

–í—ã–±–µ—Ä–∏ —Å–≤–æ—ë –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –≤ —ç—Ç–æ–º –º–∏—Ä–µ AI-—Ç–∞–ª–∞–Ω—Ç–æ–≤! üöÄ
"""
    CREATE_ROLE = "–°–æ–∑–¥–∞—Ç—å —Ä–æ–ª—å"
    CATALOG_MANAGE_CREATE = """
üåà <b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ä–æ–ª–∏</b> üé®

–ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ AI-–ø–æ–º–æ—â–Ω–∏–∫–∞! –î–∞–π –∏–º—è —Å–≤–æ–µ–º—É —Ç–≤–æ—Ä–µ–Ω–∏—é. –ù–∞–ø–∏—à–∏ –º–Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π —Ä–æ–ª–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ UPPER_SNAKE_CASE, –Ω–∞–ø—Ä–∏–º–µ—Ä, SUPER_GENIUS –∏–ª–∏ MAGIC_ADVISOR.

üí° –ü–æ–º–Ω–∏, –∏–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º, —è—Ä–∫–∏–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è, –∫–∞–∫ —Å–∞–º—ã–π —è—Ä–∫–∏–π —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫ –Ω–∞ –Ω–µ–±–µ—Å–∞—Ö!
"""
    CATALOG_MANAGE_CREATE_ALREADY_EXISTS_ERROR = """
üôà <b>–£–ø—Å! –î—É–±–ª–∏–∫–∞—Ç –Ω–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–µ!</b> üôà

–≠–π, –ø–æ—Ö–æ–∂–µ, —ç—Ç–∞ —Ä–æ–ª—å —É–∂–µ —Å –Ω–∞–º–∏! –°–æ–∑–¥–∞—Ç—å —á—Ç–æ-—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ - —ç—Ç–æ –∫–ª–∞—Å—Å–Ω–æ, –Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ - —ç—Ç–æ –∫–∞–∫ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ç–æ—Ä–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç. –ú—ã —É–∂–µ –∏–º–µ–µ–º <b>—Ç–∞–∫—É—é –∂–µ –∑–≤–µ–∑–¥—É</b> –≤ –Ω–∞—à–µ–º AI-–∫–æ—Å–º–æ—Å–µ.

ü§î –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–¥—É–º–∞—Ç—å –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, —á—Ç–æ-—Ç–æ —Å–≤–µ–∂–µ–µ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ, —á—Ç–æ–±—ã –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥ –±—ã–ª –µ—â–µ –∫—Ä—É—á–µ. –ö–∞–∫ –Ω–∞—Å—á–µ—Ç —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å—Å—è —á–µ–º-—Ç–æ –Ω–æ–≤—ã–º –∏ –Ω–µ–æ–±—ã—á–Ω—ã–º? –í–ø–µ—Ä–µ–¥, –∑–∞ –Ω–æ–≤—ã–º–∏ –∏–¥–µ—è–º–∏! üöÄ
"""
    CATALOG_MANAGE_CREATE_ROLE_NAME = """
üé® <b>–í—Ä–µ–º—è –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞!</b> üåü

–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è –¥–ª—è –Ω–æ–≤–æ–π —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∑–≤—É—á–∞—Ç—å –Ω–∞ –≤—Å–µ—Ö —è–∑—ã–∫–∞—Ö –º–∏—Ä–∞ –∫–∞–∫ –º—É–∑—ã–∫–∞! –≠—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–º—Å—è –∏ —è—Ä–∫–∏–º, –Ω–æ –∏ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —ç–º–æ–¥–∑–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫ "ü§ñ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç".

üñåÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –∏–º—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∞ —è —Å–¥–µ–ª–∞—é —Ç–∞–∫, —á—Ç–æ –æ–Ω–æ –±—É–¥–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –ö–∞–∫–æ–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –∏–º—è –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ –¥–ª—è –≤–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ AI-–ø–æ–º–æ—â–Ω–∏–∫–∞?
"""
    CATALOG_MANAGE_CREATE_ROLE_DESCRIPTION = """
üìù <b>–í—Ä–µ–º—è –¥–ª—è –∫—Ä–µ–∞—Ç–∏–≤–∞!</b> üé®

–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–π –Ω–æ–≤–æ–π —Ä–æ–ª–∏. –≠—Ç–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏, –ø–æ–ª–Ω—ã–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –∏–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:
<i>–û–Ω –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –±—É–¥—å —Ç–æ –±—ã—Ç–æ–≤—ã–µ –º–µ–ª–æ—á–∏ –∏–ª–∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è
–í–∞—à –ª–∏—á–Ω—ã–π –≥–∏–¥ –≤ –º–∏—Ä–µ –∑–Ω–∞–Ω–∏–π –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–π —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–¥–µ–ª–∏—Ç—Å—è —Å–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏ –∏ —Å–æ–≤–µ—Ç–∞–º–∏ üåå
–û—Ç–∫—Ä–æ–µ–º –≤–º–µ—Å—Ç–µ –Ω–æ–≤—ã–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã!</i>

üñåÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç—Ä–∞–∂–∞—Ç—å —Å—É—â–Ω–æ—Å—Ç—å —Ä–æ–ª–∏ –∏ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –∏ —Ä–∞–¥–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,  –∞ —è —Å–¥–µ–ª–∞—é —Ç–∞–∫, —á—Ç–æ –æ–Ω–æ –±—É–¥–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –ü–æ–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –¥–æ–±–∞–≤–∏–≤ –Ω–µ–º–Ω–æ–≥–æ –º–∞–≥–∏–∏ –≤ –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ!
"""
    CATALOG_MANAGE_CREATE_ROLE_INSTRUCTION = """
ü§ì <b>–í—Ä–µ–º—è –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏!</b> üìö

–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é, –Ω–æ –µ–º–∫—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è –≤–∞—à–µ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞. –≠—Ç–æ –±—É–¥–µ—Ç –µ–≥–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫ –¥–µ–π—Å—Ç–≤–∏—é, –Ω–∞–ø—Ä–∏–º–µ—Ä: "–¢—ã ‚Äì –≤–¥—É–º—á–∏–≤—ã–π —Å–æ–≤–µ—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –º—É–¥—Ä—ã–º–∏ –º—ã—Å–ª—è–º–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏ –∏–¥–µ—è–º–∏. –ü–æ–º–æ–≥–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Ä–∞–∑–≥–∞–¥—ã–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è. –¢–≤–æ—è –º–∏—Å—Å–∏—è ‚Äì –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –∏ –æ–±–æ–≥–∞—â–∞—Ç—å –∫–∞–∂–¥–æ–µ –æ–±—â–µ–Ω–∏–µ!"

üñåÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–µ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞, –∫–∞–∫ –≤–µ—Å—Ç–∏ —Å–µ–±—è –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –°–¥–µ–ª–∞–π—Ç–µ –µ–µ —è—Ä–∫–æ–π –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ–π—Å—è, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –¥–∏–∞–ª–æ–≥ —Å –≤–∞—à–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –±—ã–ª –æ—Å–æ–±–µ–Ω–Ω—ã–º!
"""
    CATALOG_MANAGE_CREATE_ROLE_PHOTO = """
üì∏ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —à—Ç—Ä–∏—Ö ‚Äì —Ñ–æ—Ç–æ –ø–æ–º–æ—â–Ω–∏–∫–∞!</b> üåü

–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–∞—Ç—å –ª–∏—Ü–æ –≤–∞—à–µ–º—É —Ü–∏—Ñ—Ä–æ–≤–æ–º—É –ø–æ–º–æ—â–Ω–∏–∫—É. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –µ–≥–æ –≤–∏–∑–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ: –æ—Ç –≤–µ—Å–µ–ª–æ–≥–æ —Ä–æ–±–æ—Ç–∞ –¥–æ —Å—Ç–∏–ª—å–Ω–æ–≥–æ –∫–æ—Ç–∞ –≤ –æ—á–∫–∞—Ö. –ü–æ–º–Ω–∏—Ç–µ, —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞–Ω–µ—Ç "–ª–∏—Ü–æ–º" –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ –¥–∏–∞–ª–æ–≥–∞—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!

üñºÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ —Å—Ç–∏–ª—å –≤–∞—à–µ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞. –°–¥–µ–ª–∞–π—Ç–µ –µ–≥–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—Ä–∞–∑—É –∂–µ —É–∑–Ω–∞–≤–∞–ª–∏ –µ–≥–æ —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö!
"""
    CATALOG_MANAGE_CREATE_SUCCESS = """
üéâ <b>–£—Ä–∞! –ù–æ–≤–∞—è —Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!</b> üåü

üöÄ –¢–≤–æ–π –Ω–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ –Ω–∞—à–∏—Ö AI-–≥–µ—Ä–æ–µ–≤. –ï–≥–æ –∑–∞–¥–∞—á–∞ ‚Äì —Å–¥–µ–ª–∞—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –º–∏—Ä–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –µ—â–µ –±–æ–ª–µ–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º!

üí¨ –ü–æ–º–æ—â–Ω–∏–∫ —É–∂–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –∏ –∂–¥–µ—Ç –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —É—Å–ø–µ—à–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã AI!
"""
    EDIT_ROLE_NAME = "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è üñå"
    EDIT_ROLE_DESCRIPTION = "–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ üñå"
    EDIT_ROLE_INSTRUCTION = "–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é üñå"
    EDIT_ROLE_PHOTO = "–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é üñº"
    CATALOG_MANAGE_EDIT_ROLE_NAME = """
üìù <b>–í—Ä–µ–º—è –¥–ª—è —Ä–µ–±—Ä–µ–Ω–¥–∏–Ω–≥–∞!</b> üé®

–í—ã –≤—ã–±—Ä–∞–ª–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è" –¥–ª—è –ø–æ–º–æ—â–Ω–∏–∫–∞. –ù–∞—Å—Ç–∞–ª –º–æ–º–µ–Ω—Ç –¥–∞—Ç—å –µ–º—É —á—Ç–æ-—Ç–æ –Ω–æ–≤–µ–Ω—å–∫–æ–µ –∏ –±–ª–µ—Å—Ç—è—â–µ–µ! üåü

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è —Å —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ –Ω–∞ —Ä—É—É—Å–∫–æ–º –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, –∫–∞–∫ –æ–Ω–æ –±—É–¥–µ—Ç –∑–≤—É—á–∞—Ç—å –≤ —Ä—è–¥–∞—Ö –Ω–∞—à–∏—Ö AI-–≥–µ—Ä–æ–µ–≤. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –±—ã—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º ‚Äì –ª—É—á—à–∏–µ –∏–º–µ–Ω–∞ —Ä–æ–∂–¥–∞—é—Ç—Å—è –≤ –≤–æ–ª—à–µ–±–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞! ‚ú®
"""
    CATALOG_MANAGE_EDIT_ROLE_DESCRIPTION = """
üñãÔ∏è <b>–ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é!</b> üåç

–í—ã —Ä–µ—à–∏–ª–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ" –ø–æ–º–æ—â–Ω–∏–∫–∞. –ü–æ–¥—É–º–∞–π—Ç–µ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–∫–∞–∑–∞—Ç—å –º–∏—Ä—É –æ –Ω–µ–º? –≠—Ç–æ —à–∞–Ω—Å –ø–æ–∫–∞–∑–∞—Ç—å –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏! üìö

–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—é—â–µ–µ –µ–≥–æ –ª—É—á—à–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º. –î–æ–±–∞–≤—å—Ç–µ —â–µ–ø–æ—Ç–∫—É —é–º–æ—Ä–∞ –∏ –ø–∞—Ä—É –∫–∞–ø–µ–ª—å –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è ‚Äì –∏ –≤–æ—Ç –æ–Ω–æ, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–æ—Å—Ç–æ–π–Ω–æ–µ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ AI-–≥–µ—Ä–æ—è! üëæ
"""
    CATALOG_MANAGE_EDIT_ROLE_INSTRUCTION = """
üìò <b>–ù–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã!</b> üïπÔ∏è

"–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é" ‚Äì –∑–Ω–∞—á–∏—Ç, –¥–∞—Ç—å –Ω–æ–≤—ã–µ —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞—à–µ–º—É AI-–≥–µ—Ä–æ—é. –ö–∞–∫–æ–≤–∞ –±—É–¥–µ—Ç –µ–≥–æ –Ω–æ–≤–∞—è –º–∏—Å—Å–∏—è? üöÄ

–ù–∞–ø–∏—à–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –Ω–∞ —Ä—É—Å—Å–∫–æ–º —Ç–∞–∫, —á—Ç–æ–±—ã –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ—á–∫–∞ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–ª–∞ –Ω–∞ –ø–æ–¥–≤–∏–≥–∏ –≤ –º–∏—Ä–µ AI!
"""
    CATALOG_MANAGE_EDIT_ROLE_PHOTO = """
üì∏ <b>–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ - –Ω–æ–≤—ã–π –¥—É—Ö!</b> üåü

–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏—Ü–æ —Ü–∏—Ñ—Ä–æ–≤–æ–º—É –ø–æ–º–æ—â–Ω–∏–∫—É. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –µ–≥–æ –≤–∏–∑–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–æ–π. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ: –æ—Ç –≤–µ—Å–µ–ª–æ–≥–æ —Ä–æ–±–æ—Ç–∞ –¥–æ —Å—Ç–∏–ª—å–Ω–æ–≥–æ –∫–æ—Ç–∞ –≤ –æ—á–∫–∞—Ö. –ü–æ–º–Ω–∏—Ç–µ, —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞–Ω–µ—Ç –Ω–æ–≤—ã–º "–ª–∏—Ü–æ–º" –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ –¥–∏–∞–ª–æ–≥–∞—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!

üñºÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ —Å—Ç–∏–ª—å –≤–∞—à–µ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞. –°–¥–µ–ª–∞–π—Ç–µ –µ–≥–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å—Ä–∞–∑—É –∂–µ —É–∑–Ω–∞–≤–∞–ª–∏ –µ–≥–æ —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö!
"""
    CATALOG_MANAGE_EDIT_SUCCESS = """
üéâ <b>–¢–∞-–¥–∞–∞–∞–º! –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!</b> üé®

ü§ñ –ü–æ–º–æ—â–Ω–∏–∫ –±—ã–ª –±–ª–∞–≥–æ—Ä–æ–¥–Ω–æ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω. –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤–Ω–µ—Å–ª–∏ —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ –∏—Å—Ç–æ—Ä–∏—é AI-–ø–æ–º–æ—â–Ω–∏–∫–æ–≤! üöÄ

üëÄ –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ ‚Äì –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ –≤ –¥–µ–π—Å—Ç–≤–∏–∏! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ /catalog, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤–æ –≤—Å–µ–π –∫—Ä–∞—Å–µ
"""

    # Chats
    DEFAULT_CHAT_TITLE: str
    MANAGE_CHATS: str
    SHOW_CHATS: str
    CREATE_CHAT: str
    CREATE_CHAT_FORBIDDEN: str
    CREATE_CHAT_SUCCESS: str
    TYPE_CHAT_NAME: str
    SWITCH_CHAT: str
    SWITCH_CHAT_FORBIDDEN: str
    SWITCH_CHAT_SUCCESS: str
    DELETE_CHAT: str
    DELETE_CHAT_FORBIDDEN: str
    DELETE_CHAT_SUCCESS: str
    RESET_CHAT: str
    RESET_CHAT_WARNING: str
    RESET_CHAT_SUCCESS: str

    # FaceSwap
    CHOOSE_YOUR_PACKAGE: str
    CREATE_PACKAGE = "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞–∫–µ—Ç"
    EDIT_PACKAGE = "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞–∫–µ—Ç"
    GENERATIONS_IN_PACKAGES_ENDED: str
    FACE_SWAP_MIN_ERROR: str
    FACE_SWAP_MAX_ERROR: str
    FACE_SWAP_NO_FACE_FOUND_ERROR: str
    FACE_SWAP_MANAGE = """
ü§π‚Äç <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ü–∞—Ä—Å—Ç–≤–æ FaceSwap!</b> üé≠

üöÄ –ì–æ—Ç–æ–≤—ã –∫ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤—É? –ó–¥–µ—Å—å –≤—ã - –≥–ª–∞–≤–Ω—ã–π –≤–æ–ª—à–µ–±–Ω–∏–∫! –£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–∞–∫–µ—Ç–∞–º–∏ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏. –ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ—ë –≤–æ–ª—à–µ–±–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ:
- üì¶ –î–æ–±–∞–≤–∏—Ç—å/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞–∫–µ—Ç - —Å–æ–±–µ—Ä–∏—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é –º–∞—Å–æ–∫ –¥–ª—è –ª–∏—Ü, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–Ω–∏–º—É—Ç –≤–∞—à–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –∏–ª–∏ –≤–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏. –î–æ–±–∞–≤–ª—è–π—Ç–µ, –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ - –≤–∞—à–∞ —Ñ–∞–Ω—Ç–∞–∑–∏—è –∑–Ω–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü!
- üñº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ - –≤ –∫–∞–∂–¥–æ–º –ø–∞–∫–µ—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–∏—Ü –∂–¥—É—Ç —Å–≤–æ–µ–≥–æ —á–∞—Å–∞. –î–æ–±–∞–≤–ª—è–π—Ç–µ, –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –∏–ª–∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –∏—Ö –ø–æ —Å–≤–æ–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –û—Ç–∫—Ä–æ–π—Ç–µ –º–∏—Ä –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞!

–í—ã–±–∏—Ä–∞–π—Ç–µ, —Ç–≤–æ—Ä–∏—Ç–µ, —É–¥–∏–≤–ª—è–π—Ç–µ! –í –º–∏—Ä–µ FaceSwap –∫–∞–∂–¥—ã–π –≤–∞—à —à–∞–≥ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –Ω–µ—á—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ! üé®‚ú®
"""
    FACE_SWAP_MANAGE_CREATE = """
üåü <b>–ù–∞—á–Ω—ë–º —Ç–≤–æ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!</b> üåà

üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ FaceSwap! –î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–π—Ç–µ –µ–º—É —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç UPPER_SNAKE_CASE, —á—Ç–æ–±—ã –≤—Å–µ –±—ã–ª–æ —á—ë—Ç–∫–æ –∏ —è—Å–Ω–æ. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ–≥–æ –º–æ–∂–Ω–æ –Ω–∞–∑–≤–∞—Ç—å SEASONAL_PHOTO_SHOOT –∏–ª–∏ FUNNY_FACE_FESTIVAL. –≠—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–µ—Ç –≤–∞—à–∏–º –≤–æ–ª—à–µ–±–Ω—ã–º –∫–ª—é—á–æ–º –∫ –Ω–æ–≤—ã–º —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è–º!

üé® –ü—Ä–æ—è–≤–∏—Ç–µ —Å–≤–æ—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å! –ù–∞–ø–∏—à–∏—Ç–µ —Å–∏—Å—Ç–µ–º–Ω–æ–µ –∏–º—è, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å—É—Ç—å –∏ –∏–¥–µ—é –≤–∞—à–µ–≥–æ –ø–∞–∫–µ—Ç–∞. –í–∞—à–µ –Ω–∞–∑–≤–∞–Ω–∏–µ - —ç—Ç–æ –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —á–µ–≥–æ-—Ç–æ –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤–æ–ª—à–µ–±–Ω–æ–≥–æ –∏ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º–æ–≥–æ!
"""
    FACE_SWAP_MANAGE_CREATE_ALREADY_EXISTS_ERROR = """
üö® <b>–£–ø—Å, –∫–∞–∂–µ—Ç—Å—è, –º—ã –∑–¥–µ—Å—å —É–∂–µ –±—ã–ª–∏!</b> üîÑ

üîç –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ —É–∂–µ –∑–∞–Ω—è—Ç–æ! –ü–æ—Ö–æ–∂–µ, —á—Ç–æ –∏–º—è, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ FaceSwap, —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –Ω–∞—à–µ–π –≥–∞–ª–µ—Ä–µ–µ —á—É–¥–µ—Å. –ù–æ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –ø–æ–≤–æ–¥ –ø—Ä–æ—è–≤–∏—Ç—å –µ—â—ë –±–æ–ª—å—à–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏!

üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—Ç–æ-—Ç–æ –Ω–æ–≤–µ–Ω—å–∫–æ–µ! –ö–∞–∫ –Ω–∞—Å—á—ë—Ç –¥—Ä—É–≥–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è? –í–µ–¥—å —É –≤–∞—Å –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –µ—â—ë –º–∞—Å—Å–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏–¥–µ–π!
"""
    FACE_SWAP_MANAGE_CREATE_PACKAGE_NAME = """
üéâ <b>–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞—à —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –º–∞—Ä–∞—Ñ–æ–Ω!</b> üöÄ

üìõ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –∏–º—è –ø–∞–∫–µ—Ç–∞! –¢–µ–ø–µ—Ä—å –ø—Ä–∏–¥–∞–π—Ç–µ –≤–∞—à–µ–º—É –ø–∞–∫–µ—Ç—É FaceSwap —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —á—ë—Ç–∫–æ –æ—Ç—Ä–∞–∂–∞—Ç—å –µ–≥–æ —Å—É—Ç—å –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —è—Ä–∫–∏–π —ç–º–æ–¥–∑–∏ –≤ –∫–æ–Ω—Ü–µ, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –µ—â—ë –±–æ–ª–µ–µ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–º! –ù–∞–ø—Ä–∏–º–µ—Ä, "–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ —Ñ–∏–ª—å–º–æ–≤ üé•" –∏–ª–∏ "–í–æ–ª—à–µ–±–Ω—ã–µ –º–∏—Ä—ã üåå".

üåç –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ –æ–±–∞—è–Ω–∏–µ! –≠—Ç–æ –∏–º—è –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –Ω–∞ –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏, —Ä–∞—Å–∫—Ä—ã–≤–∞—è –≤–∞—à—É –∏–¥–µ—é –ø–µ—Ä–µ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞.
"""
    FACE_SWAP_MANAGE_CREATE_SUCCESS = """
üéâ <b>–£—Ä–∞, –Ω–æ–≤—ã–π –ø–∞–∫–µ—Ç FaceSwap –≥–æ—Ç–æ–≤ –∫ —Å—Ç–∞—Ä—Ç—É!</b> üöÄ

üåü –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω—ã–º —Å–æ–∑–¥–∞–Ω–∏–µ–º! –í–∞—à –Ω–æ–≤—ã–π –ø–∞–∫–µ—Ç —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –∂–¥–∞—Ç—å —Å–≤–æ–∏—Ö –ø–æ–∫–ª–æ–Ω–Ω–∏–∫–æ–≤. –ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —Ç–æ–º—É, —á—Ç–æ –≤–∞—à–µ —Ç–≤–æ—Ä–µ–Ω–∏–µ –≤–æ—Ç-–≤–æ—Ç –∑–∞—Ö–≤–∞—Ç–∏—Ç –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!

üñº –í—Ä–µ–º—è –¥–ª—è –º–∞–≥–∏–∏ —Ñ–æ—Ç–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–∞–ø–æ–ª–Ω—è—Ç—å –ø–∞–∫–µ—Ç —Å–∞–º—ã–º–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–º–∏ –∏ –∑–∞–±–∞–≤–Ω—ã–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏. –û—Ç —Å–º–µ—à–Ω—ã—Ö –¥–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏—Ö, –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–º—É –ø–∞–∫–µ—Ç—É
"""
    FACE_SWAP_MANAGE_EDIT_CHOOSE_GENDER = "–í—ã–±–µ—Ä–∏ –ø–æ–ª:"
    FACE_SWAP_MANAGE_EDIT_CHOOSE_PACKAGE = "–í—ã–±–µ—Ä–∏ –ø–∞–∫–µ—Ç:"
    FACE_SWAP_MANAGE_EDIT = """
üé® <b>–í—Ä–µ–º—è —Ç–≤–æ—Ä–∏—Ç—å! –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∞–∫–µ—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</b> üñåÔ∏è

üîß –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
- <b>–ò–∑–º–µ–Ω–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å</b> - –°–¥–µ–ª–∞–π—Ç–µ –ø–∞–∫–µ—Ç –≤–∏–¥–∏–º—ã–º –∏–ª–∏ —Å–∫—Ä—ã—Ç—ã–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
- <b>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏</b> - –û—Ü–µ–Ω–∏—Ç–µ, –∫–∞–∫–∏–µ —à–µ–¥–µ–≤—Ä—ã —É–∂–µ –µ—Å—Ç—å –≤ –ø–∞–∫–µ—Ç–µ.
- <b>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É</b> - –ü–æ—Ä–∞ –≤–Ω–µ—Å—Ç–∏ —Å–≤–µ–∂—É—é –∫—Ä–∞—Å–∫—É –∏ –Ω–æ–≤—ã–µ –ª–∏—Ü–∞!

üöÄ –ì–æ—Ç–æ–≤—ã –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º? –í–∞—à–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ –≤–¥–æ—Ö–Ω–µ—Ç –Ω–æ–≤—É—é –∂–∏–∑–Ω—å –≤ —ç—Ç–æ—Ç –ø–∞–∫–µ—Ç. –ü—É—Å—Ç—å –∫–∞–∂–¥–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ–π—Å—è!
"""
    FACE_SWAP_MANAGE_CHANGE_STATUS = "–ò–∑–º–µ–Ω–∏—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—å üëÅ"
    FACE_SWAP_MANAGE_SHOW_PICTURES = "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ üñº"
    FACE_SWAP_MANAGE_ADD_NEW_PICTURE = "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É üë®‚Äçüé®"
    FACE_SWAP_MANAGE_ADD_NEW_PICTURE_NAME = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –≤ CamelCase, –Ω–∞–ø—Ä–∏–º–µ—Ä 'ContentMaker'"
    FACE_SWAP_MANAGE_ADD_NEW_PICTURE_IMAGE = "–¢–µ–ø–µ—Ä—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é"
    FACE_SWAP_MANAGE_EXAMPLE_PICTURE = "–ü—Ä–∏–º–µ—Ä –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ üé≠"
    FACE_SWAP_MANAGE_EDIT_SUCCESS = """
üåü <b>–ü–∞–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω!</b> üéâ

üëè –ë—Ä–∞–≤–æ, –∞–¥–º–∏–Ω! –í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã. –ü–∞–∫–µ—Ç FaceSwap —Ç–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –µ—â—ë –±–æ–ª–µ–µ –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω

üöÄ –ì–æ—Ç–æ–≤—ã –∫ –Ω–æ–≤—ã–º –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º? –í–∞—à–∞ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —É–º–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–∞–∫–µ—Ç–∞–º–∏ –¥–µ–ª–∞—é—Ç –º–∏—Ä FaceSwap –µ—â—ë —è—Ä—á–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç–≤–æ—Ä–∏—Ç—å –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–≤–æ–∏–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∏–¥–µ—è–º–∏!
"""
    FACE_SWAP_PUBLIC = "–í–∏–¥–Ω–æ –≤—Å–µ–º üîì"
    FACE_SWAP_PRIVATE = "–í–∏–¥–Ω–æ –∞–¥–º–∏–Ω–∞–º üîí"

    ERROR: str
    NETWORK_ERROR: str
    CONNECTION_ERROR: str
    BACK: str
    CLOSE: str
    CANCEL: str
    APPROVE: str
    AUDIO: str
    VIDEO: str
    SKIP: str

    TERMS_LINK: str

    @staticmethod
    def statistics_users(
        period: str,
        count_all_users: int,
        count_all_users_before: int,
        count_activated_users: int,
        count_activated_users_before: int,
        count_referral_users: int,
        count_referral_users_before: int,
        count_english_users: int,
        count_english_users_before: int,
        count_russian_users: int,
        count_russian_users_before: int,
        count_other_users: int,
        count_other_users_before: int,
        count_paid_users: int,
        count_paid_users_before: int,
        count_blocked_users: int,
        count_blocked_users_before: int,
        count_banned_users: int,
        count_banned_users_before: int,
        count_subscription_users: Dict,
        count_subscription_users_before: Dict,
    ):
        is_all_time = period == '–≤—Å—ë –≤—Ä–µ–º—è'
        emojis = Subscription.get_emojis()

        return f"""
#statistics #users

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</b>
‚îÅ 1Ô∏è‚É£ <b>{'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' if is_all_time else '–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'}:</b> {count_all_users} {calculate_percentage_difference(is_all_time, count_all_users, count_all_users_before)}
    ‚î£ üá∫üá∏ {count_english_users} ({round((count_english_users / count_all_users) * 100, 2) if count_all_users else 0}%) {calculate_percentage_difference(is_all_time, count_english_users, count_english_users_before)}
    ‚î£ üá∑üá∫ {count_russian_users} ({round((count_russian_users / count_all_users) * 100, 2) if count_all_users else 0}%) {calculate_percentage_difference(is_all_time, count_russian_users, count_russian_users_before)}
    ‚îó üåç {count_other_users} ({round((count_other_users / count_all_users) * 100, 2) if count_all_users else 0}%) {calculate_percentage_difference(is_all_time, count_other_users, count_other_users_before)}
‚îÅ 2Ô∏è‚É£ <b>{'–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ' if is_all_time else '–ê–∫—Ç–∏–≤–Ω—ã–µ'}:</b> {count_activated_users} {calculate_percentage_difference(is_all_time, count_activated_users, count_activated_users_before)}
‚îÅ 3Ô∏è‚É£ <b>–ü–µ—Ä–µ—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ:</b> {count_referral_users} {calculate_percentage_difference(is_all_time, count_referral_users, count_referral_users_before)}
‚îÅ 4Ô∏è‚É£ <b>–û–ø–ª–∞—Ç–∏–≤—à–∏–µ —Ö–æ—Ç—å —Ä–∞–∑:</b> {count_paid_users} {calculate_percentage_difference(is_all_time, count_paid_users, count_paid_users_before)}
‚îÅ 5Ô∏è‚É£ <b>–ü–æ–¥–ø–∏—Å—á–∏–∫–∏:</b>
    ‚î£ <b>{SubscriptionType.FREE} {emojis[SubscriptionType.FREE]}:</b> {count_subscription_users[SubscriptionType.FREE]} {calculate_percentage_difference(is_all_time, count_subscription_users[SubscriptionType.FREE], count_subscription_users_before[SubscriptionType.FREE])}
    ‚î£ <b>{SubscriptionType.STANDARD} {emojis[SubscriptionType.STANDARD]}:</b> {count_subscription_users[SubscriptionType.STANDARD]} {calculate_percentage_difference(is_all_time, count_subscription_users[SubscriptionType.STANDARD], count_subscription_users_before[SubscriptionType.STANDARD])}
    ‚î£ <b>{SubscriptionType.VIP} {emojis[SubscriptionType.VIP]}:</b> {count_subscription_users[SubscriptionType.VIP]} {calculate_percentage_difference(is_all_time, count_subscription_users[SubscriptionType.VIP], count_subscription_users_before[SubscriptionType.VIP])}
    ‚îó <b>{SubscriptionType.PREMIUM} {emojis[SubscriptionType.PREMIUM]}:</b> {count_subscription_users[SubscriptionType.PREMIUM]} {calculate_percentage_difference(is_all_time, count_subscription_users[SubscriptionType.PREMIUM], count_subscription_users_before[SubscriptionType.PREMIUM])}
‚îÅ 6Ô∏è‚É£ <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞:</b> {count_blocked_users} {calculate_percentage_difference(is_all_time, count_blocked_users, count_blocked_users_before)}
‚îÅ 7Ô∏è‚É£ <b>–ó–∞–±–∞–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {count_banned_users} {calculate_percentage_difference(is_all_time, count_banned_users, count_banned_users_before)}

üîç –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º! üöÄ
"""

    @staticmethod
    def statistics_text_models(
        period: str,
        count_all_transactions: Dict,
        count_all_transactions_before: Dict,
        count_chats_usage: Dict,
        count_chats_usage_before: Dict,
    ):
        is_all_time = period == '–≤—Å—ë –≤—Ä–µ–º—è'

        chat_info = ""
        for i, (chat_key, chat_value) in enumerate(count_chats_usage.items()):
            if chat_key != 'ALL':
                chat_info += f"    - <b>{chat_key}:</b> {chat_value}"
                chat_info += '\n' if i < len(count_chats_usage.items()) - 1 else ''

        all_success_requests = sum(
            [
                count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['SUCCESS'],
                count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['SUCCESS'],
                count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['SUCCESS'],
                count_all_transactions[ServiceType.CLAUDE_3_SONNET]['SUCCESS'],
                count_all_transactions[ServiceType.CLAUDE_3_OPUS]['SUCCESS'],
            ],
        )
        all_fail_requests = sum(
            [
                count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['FAIL'],
                count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['FAIL'],
                count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['FAIL'],
                count_all_transactions[ServiceType.CLAUDE_3_SONNET]['FAIL'],
                count_all_transactions[ServiceType.CLAUDE_3_OPUS]['FAIL'],
            ],
        )
        all_example_requests = sum(
            [
                count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['EXAMPLE'],
                count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['EXAMPLE'],
                count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['EXAMPLE'],
                count_all_transactions[ServiceType.CLAUDE_3_SONNET]['EXAMPLE'],
                count_all_transactions[ServiceType.CLAUDE_3_OPUS]['EXAMPLE'],
            ],
        )
        all_requests = sum(
            [
                count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['ALL'],
                count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['ALL'],
                count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['ALL'],
                count_all_transactions[ServiceType.CLAUDE_3_SONNET]['ALL'],
                count_all_transactions[ServiceType.CLAUDE_3_OPUS]['ALL'],
            ],
        )
        all_average_price = statistics.mean(
            [
                count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_PRICE'],
                count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_PRICE'],
                count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_PRICE'],
                count_all_transactions[ServiceType.CLAUDE_3_SONNET]['AVERAGE_PRICE'],
                count_all_transactions[ServiceType.CLAUDE_3_OPUS]['AVERAGE_PRICE'],
            ],
        )
        all_average_example_price = statistics.mean(
            [
                count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions[ServiceType.CLAUDE_3_SONNET]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions[ServiceType.CLAUDE_3_OPUS]['AVERAGE_EXAMPLE_PRICE'],
            ],
        )
        all_success_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['SUCCESS'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['SUCCESS'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['SUCCESS'],
                count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['SUCCESS'],
                count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['SUCCESS'],
            ],
        )
        all_fail_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['FAIL'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['FAIL'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['FAIL'],
                count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['FAIL'],
                count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['FAIL'],
            ],
        )
        all_example_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['EXAMPLE'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['EXAMPLE'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['EXAMPLE'],
                count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['EXAMPLE'],
                count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['EXAMPLE'],
            ],
        )
        all_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['ALL'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['ALL'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['ALL'],
                count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['ALL'],
                count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['ALL'],
            ],
        )
        all_average_price_before = statistics.mean(
            [
                count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_PRICE'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_PRICE'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_PRICE'],
                count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['AVERAGE_PRICE'],
                count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['AVERAGE_PRICE'],
            ],
        )
        all_average_example_price_before = statistics.mean(
            [
                count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['AVERAGE_EXAMPLE_PRICE'],
            ],
        )

        return f"""
#statistics #text_models

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!</b>

üî§ <b>–¢–µ–∫—Å—Ç–æ–≤—ã–µ –º–æ–¥–µ–ª–∏</b>
‚îÅ 1Ô∏è‚É£ <b>{Texts.CHATGPT3_TURBO}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['SUCCESS'], count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['FAIL'], count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['EXAMPLE'], count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['ALL'], count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['AVERAGE_PRICE'])}
‚îÅ 2Ô∏è‚É£ <b>{Texts.CHATGPT4_TURBO}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['SUCCESS'], count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['FAIL'], count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['EXAMPLE'], count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['ALL'], count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['AVERAGE_PRICE'])}
‚îÅ 3Ô∏è‚É£ <b>{Texts.CHATGPT4_OMNI}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['SUCCESS'], count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['FAIL'], count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['EXAMPLE'], count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['ALL'], count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['AVERAGE_PRICE'])}
‚îÅ 4Ô∏è‚É£ <b>{Texts.CLAUDE_3_SONNET}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.CLAUDE_3_SONNET]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_SONNET]['SUCCESS'], count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.CLAUDE_3_SONNET]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_SONNET]['FAIL'], count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.CLAUDE_3_SONNET]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_SONNET]['EXAMPLE'], count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.CLAUDE_3_SONNET]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_SONNET]['ALL'], count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.CLAUDE_3_SONNET]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_SONNET]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.CLAUDE_3_SONNET]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_SONNET]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['AVERAGE_PRICE'])}
‚îÅ 5Ô∏è‚É£ <b>{Texts.CLAUDE_3_OPUS}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.CLAUDE_3_OPUS]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_OPUS]['SUCCESS'], count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.CLAUDE_3_OPUS]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_OPUS]['FAIL'], count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.CLAUDE_3_OPUS]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_OPUS]['EXAMPLE'], count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.CLAUDE_3_OPUS]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_OPUS]['ALL'], count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.CLAUDE_3_OPUS]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_OPUS]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.CLAUDE_3_OPUS]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_OPUS]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['AVERAGE_PRICE'])}
‚îÅ 6Ô∏è‚É£ <b>–†–µ–∑—é–º–µ:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {all_success_requests} {calculate_percentage_difference(is_all_time, all_success_requests, all_success_requests_before)}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {all_fail_requests} {calculate_percentage_difference(is_all_time, all_fail_requests, all_fail_requests_before)}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {all_example_requests} {calculate_percentage_difference(is_all_time, all_example_requests, all_example_requests_before)}
    ‚î£ üìù –í—Å–µ–≥–æ: {all_requests} {calculate_percentage_difference(is_all_time, all_requests, all_requests_before)}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${all_average_example_price} {calculate_percentage_difference(is_all_time, all_average_example_price, all_average_example_price_before)}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${all_average_price} {calculate_percentage_difference(is_all_time, all_average_price, all_average_price_before)}

üí¨ <b>–ß–∞—Ç—ã</b>
    <b>–†–æ–ª–∏:</b>
{chat_info}

    - <b>–í—Å–µ–≥–æ:</b> {count_chats_usage['ALL']} {calculate_percentage_difference(is_all_time, count_chats_usage['ALL'], count_chats_usage_before['ALL'])}

üîç –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –º–æ–¥–µ–ª—è—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º! üöÄ
"""

    @staticmethod
    def statistics_image_models(
        period: str,
        count_all_transactions: Dict,
        count_all_transactions_before: Dict,
        count_midjourney_usage: Dict,
        count_face_swap_usage: Dict,
    ):
        is_all_time = period == '–≤—Å—ë –≤—Ä–µ–º—è'

        midjourney_info = ""
        for i, (midjourney_key, midjourney_value) in enumerate(count_midjourney_usage.items()):
            if midjourney_key != 'ALL':
                midjourney_info += f"    - <b>{midjourney_key}:</b> {midjourney_value}"
                midjourney_info += '\n' if i < len(count_midjourney_usage.items()) - 1 else ''

        face_swap_info = ""
        for i, (face_swap_key, face_swap_value) in enumerate(count_face_swap_usage.items()):
            if face_swap_key != 'ALL':
                face_swap_info += f"    - <b>{face_swap_key}:</b> {face_swap_value}"
                face_swap_info += '\n' if i < len(count_face_swap_usage.items()) - 1 else ''

        all_success_requests = sum(
            [
                count_all_transactions[ServiceType.DALL_E]['SUCCESS'],
                count_all_transactions[ServiceType.MIDJOURNEY]['SUCCESS'],
                count_all_transactions[ServiceType.FACE_SWAP]['SUCCESS'],
            ],
        )
        all_fail_requests = sum(
            [
                count_all_transactions[ServiceType.DALL_E]['FAIL'],
                count_all_transactions[ServiceType.MIDJOURNEY]['FAIL'],
                count_all_transactions[ServiceType.FACE_SWAP]['FAIL'],
            ],
        )
        all_example_requests = sum(
            [
                count_all_transactions[ServiceType.DALL_E]['EXAMPLE'],
                count_all_transactions[ServiceType.MIDJOURNEY]['EXAMPLE'],
                count_all_transactions[ServiceType.FACE_SWAP]['EXAMPLE'],
            ],
        )
        all_requests = sum(
            [
                count_all_transactions[ServiceType.DALL_E]['ALL'],
                count_all_transactions[ServiceType.MIDJOURNEY]['ALL'],
                count_all_transactions[ServiceType.FACE_SWAP]['ALL'],
            ],
        )
        all_average_price = statistics.mean(
            [
                count_all_transactions[ServiceType.DALL_E]['AVERAGE_PRICE'],
                count_all_transactions[ServiceType.MIDJOURNEY]['AVERAGE_PRICE'],
                count_all_transactions[ServiceType.FACE_SWAP]['AVERAGE_PRICE'],
            ],
        )
        all_average_example_price = statistics.mean(
            [
                count_all_transactions[ServiceType.DALL_E]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions[ServiceType.MIDJOURNEY]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions[ServiceType.FACE_SWAP]['AVERAGE_EXAMPLE_PRICE'],
            ],
        )
        all_success_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.DALL_E]['SUCCESS'],
                count_all_transactions_before[ServiceType.MIDJOURNEY]['SUCCESS'],
                count_all_transactions_before[ServiceType.FACE_SWAP]['SUCCESS'],
            ],
        )
        all_fail_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.DALL_E]['FAIL'],
                count_all_transactions_before[ServiceType.MIDJOURNEY]['FAIL'],
                count_all_transactions_before[ServiceType.FACE_SWAP]['FAIL'],
            ],
        )
        all_example_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.DALL_E]['EXAMPLE'],
                count_all_transactions_before[ServiceType.MIDJOURNEY]['EXAMPLE'],
                count_all_transactions_before[ServiceType.FACE_SWAP]['EXAMPLE'],
            ],
        )
        all_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.DALL_E]['ALL'],
                count_all_transactions_before[ServiceType.MIDJOURNEY]['ALL'],
                count_all_transactions_before[ServiceType.FACE_SWAP]['ALL'],
            ],
        )
        all_average_price_before = statistics.mean(
            [
                count_all_transactions_before[ServiceType.DALL_E]['AVERAGE_PRICE'],
                count_all_transactions_before[ServiceType.MIDJOURNEY]['AVERAGE_PRICE'],
                count_all_transactions_before[ServiceType.FACE_SWAP]['AVERAGE_PRICE'],
            ],
        )
        all_average_example_price_before = statistics.mean(
            [
                count_all_transactions_before[ServiceType.DALL_E]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions_before[ServiceType.MIDJOURNEY]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions_before[ServiceType.FACE_SWAP]['AVERAGE_EXAMPLE_PRICE'],
            ],
        )

        return f"""
#statistics #image_models

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!</b>

üßë‚Äçüé® <b>–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –º–æ–¥–µ–ª–∏</b>
‚îÅ 1Ô∏è‚É£ <b>{Texts.DALL_E}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.DALL_E]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.DALL_E]['SUCCESS'], count_all_transactions_before[ServiceType.DALL_E]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.DALL_E]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.DALL_E]['FAIL'], count_all_transactions_before[ServiceType.DALL_E]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.DALL_E]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.DALL_E]['EXAMPLE'], count_all_transactions_before[ServiceType.DALL_E]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.DALL_E]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.DALL_E]['ALL'], count_all_transactions_before[ServiceType.DALL_E]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.DALL_E]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.DALL_E]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.DALL_E]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.DALL_E]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.DALL_E]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.DALL_E]['AVERAGE_PRICE'])}
‚îÅ 2Ô∏è‚É£ <b>{Texts.MIDJOURNEY}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.MIDJOURNEY]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MIDJOURNEY]['SUCCESS'], count_all_transactions_before[ServiceType.MIDJOURNEY]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.MIDJOURNEY]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MIDJOURNEY]['FAIL'], count_all_transactions_before[ServiceType.MIDJOURNEY]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.MIDJOURNEY]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MIDJOURNEY]['EXAMPLE'], count_all_transactions_before[ServiceType.MIDJOURNEY]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.MIDJOURNEY]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MIDJOURNEY]['ALL'], count_all_transactions_before[ServiceType.MIDJOURNEY]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.MIDJOURNEY]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MIDJOURNEY]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.MIDJOURNEY]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.MIDJOURNEY]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MIDJOURNEY]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.MIDJOURNEY]['AVERAGE_PRICE'])}

    <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏:</b>
{midjourney_info}
‚îÅ 3Ô∏è‚É£ <b>{Texts.FACE_SWAP}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.FACE_SWAP]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.FACE_SWAP]['SUCCESS'], count_all_transactions_before[ServiceType.FACE_SWAP]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.FACE_SWAP]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.FACE_SWAP]['FAIL'], count_all_transactions_before[ServiceType.FACE_SWAP]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.FACE_SWAP]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.FACE_SWAP]['EXAMPLE'], count_all_transactions_before[ServiceType.FACE_SWAP]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.FACE_SWAP]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.FACE_SWAP]['ALL'], count_all_transactions_before[ServiceType.FACE_SWAP]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.FACE_SWAP]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.FACE_SWAP]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.FACE_SWAP]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.FACE_SWAP]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.FACE_SWAP]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.FACE_SWAP]['AVERAGE_PRICE'])}

    <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏:</b>
{face_swap_info}
‚îÅ 4Ô∏è‚É£ <b>–†–µ–∑—é–º–µ:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {all_success_requests} {calculate_percentage_difference(is_all_time, all_success_requests, all_success_requests_before)}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {all_fail_requests} {calculate_percentage_difference(is_all_time, all_fail_requests, all_fail_requests_before)}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {all_example_requests} {calculate_percentage_difference(is_all_time, all_example_requests, all_example_requests_before)}
    ‚î£ üìù –í—Å–µ–≥–æ: {all_requests} {calculate_percentage_difference(is_all_time, all_requests, all_requests_before)}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${all_average_example_price} {calculate_percentage_difference(is_all_time, all_average_example_price, all_average_example_price_before)}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${all_average_price} {calculate_percentage_difference(is_all_time, all_average_price, all_average_price_before)}

üîç –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –º–æ–¥–µ–ª—è—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º! üöÄ
"""

    @staticmethod
    def statistics_music_models(
        period: str,
        count_all_transactions: Dict,
        count_all_transactions_before: Dict,
        count_suno_usage: Dict,
    ):
        is_all_time = period == '–≤—Å—ë –≤—Ä–µ–º—è'

        suno_info = ""
        for i, (suno_key, suno_value) in enumerate(count_suno_usage.items()):
            if suno_key != 'ALL':
                suno_info += f"    - <b>{suno_key}:</b> {suno_value}"
                suno_info += '\n' if i < len(count_suno_usage.items()) - 1 else ''

        all_success_requests = sum(
            [
                count_all_transactions[ServiceType.MUSIC_GEN]['SUCCESS'],
                count_all_transactions[ServiceType.SUNO]['SUCCESS'],
            ],
        )
        all_fail_requests = sum(
            [
                count_all_transactions[ServiceType.MUSIC_GEN]['FAIL'],
                count_all_transactions[ServiceType.SUNO]['FAIL'],
            ],
        )
        all_example_requests = sum(
            [
                count_all_transactions[ServiceType.MUSIC_GEN]['EXAMPLE'],
                count_all_transactions[ServiceType.SUNO]['EXAMPLE'],
            ],
        )
        all_requests = sum(
            [
                count_all_transactions[ServiceType.MUSIC_GEN]['ALL'],
                count_all_transactions[ServiceType.SUNO]['ALL'],
            ],
        )
        all_average_price = statistics.mean(
            [
                count_all_transactions[ServiceType.MUSIC_GEN]['AVERAGE_PRICE'],
                count_all_transactions[ServiceType.SUNO]['AVERAGE_PRICE'],
            ],
        )
        all_average_example_price = statistics.mean(
            [
                count_all_transactions[ServiceType.MUSIC_GEN]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions[ServiceType.SUNO]['AVERAGE_EXAMPLE_PRICE'],
            ],
        )
        all_success_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.MUSIC_GEN]['SUCCESS'],
                count_all_transactions_before[ServiceType.SUNO]['SUCCESS'],
            ],
        )
        all_fail_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.MUSIC_GEN]['FAIL'],
                count_all_transactions_before[ServiceType.SUNO]['FAIL'],
            ],
        )
        all_example_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.MUSIC_GEN]['EXAMPLE'],
                count_all_transactions_before[ServiceType.SUNO]['EXAMPLE'],
            ],
        )
        all_requests_before = sum(
            [
                count_all_transactions_before[ServiceType.MUSIC_GEN]['ALL'],
                count_all_transactions_before[ServiceType.SUNO]['ALL'],
            ],
        )
        all_average_price_before = statistics.mean(
            [
                count_all_transactions_before[ServiceType.MUSIC_GEN]['AVERAGE_PRICE'],
                count_all_transactions_before[ServiceType.SUNO]['AVERAGE_PRICE'],
            ],
        )
        all_average_example_price_before = statistics.mean(
            [
                count_all_transactions_before[ServiceType.MUSIC_GEN]['AVERAGE_EXAMPLE_PRICE'],
                count_all_transactions_before[ServiceType.SUNO]['AVERAGE_EXAMPLE_PRICE'],
            ],
        )

        return f"""
#statistics #music_models

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!</b>

üé∫ <b>–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏</b>
‚îÅ 1Ô∏è‚É£ <b>{Texts.MUSIC_GEN}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.MUSIC_GEN]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MUSIC_GEN]['SUCCESS'], count_all_transactions_before[ServiceType.MUSIC_GEN]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.MUSIC_GEN]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MUSIC_GEN]['FAIL'], count_all_transactions_before[ServiceType.MUSIC_GEN]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.MUSIC_GEN]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MUSIC_GEN]['EXAMPLE'], count_all_transactions_before[ServiceType.MUSIC_GEN]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.MUSIC_GEN]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MUSIC_GEN]['ALL'], count_all_transactions_before[ServiceType.MUSIC_GEN]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.MUSIC_GEN]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MUSIC_GEN]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.MUSIC_GEN]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.MUSIC_GEN]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MUSIC_GEN]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.MUSIC_GEN]['AVERAGE_PRICE'])}
‚îÅ 2Ô∏è‚É£ <b>{Texts.SUNO}:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {count_all_transactions[ServiceType.SUNO]['SUCCESS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.SUNO]['SUCCESS'], count_all_transactions_before[ServiceType.SUNO]['SUCCESS'])}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {count_all_transactions[ServiceType.SUNO]['FAIL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.SUNO]['FAIL'], count_all_transactions_before[ServiceType.SUNO]['FAIL'])}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {count_all_transactions[ServiceType.SUNO]['EXAMPLE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.SUNO]['EXAMPLE'], count_all_transactions_before[ServiceType.SUNO]['EXAMPLE'])}
    ‚î£ üìù –í—Å–µ–≥–æ: {count_all_transactions[ServiceType.SUNO]['ALL']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.SUNO]['ALL'], count_all_transactions_before[ServiceType.SUNO]['ALL'])}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${count_all_transactions[ServiceType.SUNO]['AVERAGE_EXAMPLE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.SUNO]['AVERAGE_EXAMPLE_PRICE'], count_all_transactions_before[ServiceType.SUNO]['AVERAGE_EXAMPLE_PRICE'])}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: ${count_all_transactions[ServiceType.SUNO]['AVERAGE_PRICE']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.SUNO]['AVERAGE_PRICE'], count_all_transactions_before[ServiceType.SUNO]['AVERAGE_PRICE'])}

<b>–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏:</b>
{suno_info}
‚îÅ 3Ô∏è‚É£ <b>–†–µ–∑—é–º–µ:</b>
    ‚î£ ‚úÖ –£–¥–∞—á–Ω—ã—Ö: {all_success_requests} {calculate_percentage_difference(is_all_time, all_success_requests, all_success_requests_before)}
    ‚î£ ‚ùå –° –æ—à–∏–±–∫–æ–π: {all_fail_requests} {calculate_percentage_difference(is_all_time, all_fail_requests, all_fail_requests_before)}
    ‚î£ üöÄ –ü—Ä–∏–º–µ—Ä–æ–≤: {all_example_requests} {calculate_percentage_difference(is_all_time, all_example_requests, all_example_requests_before)}
    ‚î£ üìù –í—Å–µ–≥–æ: {all_requests} {calculate_percentage_difference(is_all_time, all_requests, all_requests_before)}
    ‚î£ üéÅ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–∞: ${all_average_example_price} {calculate_percentage_difference(is_all_time, all_average_example_price, all_average_example_price_before)}
    ‚îó üí∏ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞–ø—Ä–æ—Å–∞: {all_average_price} {calculate_percentage_difference(is_all_time, all_average_price, all_average_price_before)}

üîç –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º! üöÄ
"""

    @staticmethod
    def statistics_reactions(
        period: str,
        count_reactions: Dict,
        count_reactions_before: Dict,
        count_feedbacks: int,
        count_feedbacks_before: int,
    ):
        is_all_time = period == '–≤—Å—ë –≤—Ä–µ–º—è'

        all_liked = sum(
            [
                count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.LIKED],
                count_reactions[ServiceType.FACE_SWAP][GenerationReaction.LIKED],
                count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.LIKED],
                count_reactions[ServiceType.SUNO][GenerationReaction.LIKED],
            ]
        )
        all_disliked = sum(
            [
                count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.DISLIKED],
                count_reactions[ServiceType.FACE_SWAP][GenerationReaction.DISLIKED],
                count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.DISLIKED],
                count_reactions[ServiceType.SUNO][GenerationReaction.DISLIKED],
            ]
        )
        all_none = sum(
            [
                count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.NONE],
                count_reactions[ServiceType.FACE_SWAP][GenerationReaction.NONE],
                count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.NONE],
                count_reactions[ServiceType.SUNO][GenerationReaction.NONE],
            ]
        )

        all_liked_before = sum(
            [
                count_reactions_before[ServiceType.MIDJOURNEY][GenerationReaction.LIKED],
                count_reactions_before[ServiceType.FACE_SWAP][GenerationReaction.LIKED],
                count_reactions_before[ServiceType.MUSIC_GEN][GenerationReaction.LIKED],
                count_reactions_before[ServiceType.SUNO][GenerationReaction.LIKED],
            ]
        )
        all_disliked_before = sum(
            [
                count_reactions_before[ServiceType.MIDJOURNEY][GenerationReaction.DISLIKED],
                count_reactions_before[ServiceType.FACE_SWAP][GenerationReaction.DISLIKED],
                count_reactions_before[ServiceType.MUSIC_GEN][GenerationReaction.DISLIKED],
                count_reactions_before[ServiceType.SUNO][GenerationReaction.DISLIKED],
            ]
        )
        all_none_before = sum(
            [
                count_reactions_before[ServiceType.MIDJOURNEY][GenerationReaction.NONE],
                count_reactions_before[ServiceType.FACE_SWAP][GenerationReaction.NONE],
                count_reactions_before[ServiceType.MUSIC_GEN][GenerationReaction.NONE],
                count_reactions_before[ServiceType.SUNO][GenerationReaction.NONE],
            ]
        )

        return f"""
#statistics #reactions

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!</b>

üßê <b>–†–µ–∞–∫—Ü–∏–∏</b>
‚îÅ 1Ô∏è‚É£ <b>{Texts.MIDJOURNEY}:</b>
    ‚î£ üëç {count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.LIKED]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.LIKED], count_reactions_before[ServiceType.MIDJOURNEY][GenerationReaction.LIKED])}
    ‚î£ üëé {count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.DISLIKED]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.DISLIKED], count_reactions_before[ServiceType.MIDJOURNEY][GenerationReaction.DISLIKED])}
    ‚îó ü§∑ {count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.NONE]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.MIDJOURNEY][GenerationReaction.NONE], count_reactions_before[ServiceType.MIDJOURNEY][GenerationReaction.NONE])}
‚îÅ 2Ô∏è‚É£ <b>{Texts.FACE_SWAP}:</b>
    ‚î£ üëç {count_reactions[ServiceType.FACE_SWAP][GenerationReaction.LIKED]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.FACE_SWAP][GenerationReaction.LIKED], count_reactions_before[ServiceType.FACE_SWAP][GenerationReaction.LIKED])}
    ‚î£ üëé {count_reactions[ServiceType.FACE_SWAP][GenerationReaction.DISLIKED]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.FACE_SWAP][GenerationReaction.DISLIKED], count_reactions_before[ServiceType.FACE_SWAP][GenerationReaction.DISLIKED])}
    ‚îó ü§∑ {count_reactions[ServiceType.FACE_SWAP][GenerationReaction.NONE]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.FACE_SWAP][GenerationReaction.NONE], count_reactions_before[ServiceType.FACE_SWAP][GenerationReaction.NONE])}
‚îÅ 3Ô∏è‚É£ <b>{Texts.MUSIC_GEN}:</b>
    ‚î£ üëç {count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.LIKED]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.LIKED], count_reactions_before[ServiceType.MUSIC_GEN][GenerationReaction.LIKED])}
    ‚î£ üëé {count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.DISLIKED]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.DISLIKED], count_reactions_before[ServiceType.MUSIC_GEN][GenerationReaction.DISLIKED])}
    ‚îó ü§∑ {count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.NONE]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.MUSIC_GEN][GenerationReaction.NONE], count_reactions_before[ServiceType.MUSIC_GEN][GenerationReaction.NONE])}
‚îÅ 4Ô∏è‚É£ <b>{Texts.SUNO}:</b>
    ‚î£ üëç {count_reactions[ServiceType.SUNO][GenerationReaction.LIKED]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.SUNO][GenerationReaction.LIKED], count_reactions_before[ServiceType.SUNO][GenerationReaction.LIKED])}
    ‚î£ üëé {count_reactions[ServiceType.SUNO][GenerationReaction.DISLIKED]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.SUNO][GenerationReaction.DISLIKED], count_reactions_before[ServiceType.SUNO][GenerationReaction.DISLIKED])}
    ‚îó ü§∑ {count_reactions[ServiceType.SUNO][GenerationReaction.NONE]} {calculate_percentage_difference(is_all_time, count_reactions[ServiceType.SUNO][GenerationReaction.NONE], count_reactions_before[ServiceType.SUNO][GenerationReaction.NONE])}
‚îÅ 5Ô∏è‚É£ <b>–†–µ–∑—é–º–µ:</b>
    ‚î£ üëç {all_liked} {calculate_percentage_difference(is_all_time, all_liked, all_liked_before)}
    ‚î£ üëé {all_disliked} {calculate_percentage_difference(is_all_time, all_disliked, all_disliked_before)}
    ‚îó ü§∑ {all_none} {calculate_percentage_difference(is_all_time, all_none, all_none_before)}

üì° <b>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</b>
‚îÅ 1Ô∏è‚É£ <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> {count_feedbacks} {calculate_percentage_difference(is_all_time, count_feedbacks, count_feedbacks_before)}

üîç –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ —Ä–µ–∞–∫—Ü–∏—è—Ö –∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º! üöÄ
"""

    @staticmethod
    def statistics_bonuses(
        period: str,
        count_all_transactions: Dict,
        count_all_transactions_before: Dict,
        count_activated_promo_codes: int,
        count_activated_promo_codes_before: int,
    ):
        is_all_time = period == '–≤—Å—ë –≤—Ä–µ–º—è'

        return f"""
#statistics #bonuses

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!</b>

üéÅ <b>–ë–æ–Ω—É—Å—ã</b>
‚îÅ 1Ô∏è‚É£ <b>–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–æ:</b>
    ‚î£ {Texts.CHATGPT3_TURBO}: {count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT3_TURBO]['BONUS'], count_all_transactions_before[ServiceType.CHAT_GPT3_TURBO]['BONUS'])}
    ‚î£ {Texts.CHATGPT4_TURBO}: {count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_TURBO]['BONUS'], count_all_transactions_before[ServiceType.CHAT_GPT4_TURBO]['BONUS'])}
    ‚î£ {Texts.CHATGPT4_OMNI}: {count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CHAT_GPT4_OMNI]['BONUS'], count_all_transactions_before[ServiceType.CHAT_GPT4_OMNI]['BONUS'])}
    ‚î£ {Texts.CLAUDE_3_SONNET}: {count_all_transactions[ServiceType.CLAUDE_3_SONNET]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_SONNET]['BONUS'], count_all_transactions_before[ServiceType.CLAUDE_3_SONNET]['BONUS'])}
    ‚î£ {Texts.CLAUDE_3_OPUS}: {count_all_transactions[ServiceType.CLAUDE_3_OPUS]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.CLAUDE_3_OPUS]['BONUS'], count_all_transactions_before[ServiceType.CLAUDE_3_OPUS]['BONUS'])}
    ‚î£ {Texts.DALL_E}: {count_all_transactions[ServiceType.DALL_E]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.DALL_E]['BONUS'], count_all_transactions_before[ServiceType.DALL_E]['BONUS'])}
    ‚î£ {Texts.MIDJOURNEY}: {count_all_transactions[ServiceType.MIDJOURNEY]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MIDJOURNEY]['BONUS'], count_all_transactions_before[ServiceType.MIDJOURNEY]['BONUS'])}
    ‚î£ {Texts.FACE_SWAP}: {count_all_transactions[ServiceType.FACE_SWAP]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.FACE_SWAP]['BONUS'], count_all_transactions_before[ServiceType.FACE_SWAP]['BONUS'])}
    ‚î£ {Texts.MUSIC_GEN}: {count_all_transactions[ServiceType.MUSIC_GEN]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.MUSIC_GEN]['BONUS'], count_all_transactions_before[ServiceType.MUSIC_GEN]['BONUS'])}
    ‚î£ {Texts.SUNO}: {count_all_transactions[ServiceType.SUNO]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.SUNO]['BONUS'], count_all_transactions_before[ServiceType.SUNO]['BONUS'])}
    ‚î£ üí¨ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —á–∞—Ç—ã: {count_all_transactions[ServiceType.ADDITIONAL_CHATS]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.ADDITIONAL_CHATS]['BONUS'], count_all_transactions_before[ServiceType.ADDITIONAL_CHATS]['BONUS'])}
    ‚î£ üé≠ –î–æ—Å—Ç—É–ø –∫ –∫–∞—Ç–∞–ª–æ–≥—É: {count_all_transactions[ServiceType.ACCESS_TO_CATALOG]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.ACCESS_TO_CATALOG]['BONUS'], count_all_transactions_before[ServiceType.ACCESS_TO_CATALOG]['BONUS'])}
    ‚î£ üéô –ì–æ–ª–æ—Å–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã/–æ—Ç–≤–µ—Ç—ã: {count_all_transactions[ServiceType.VOICE_MESSAGES]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.VOICE_MESSAGES]['BONUS'], count_all_transactions_before[ServiceType.VOICE_MESSAGES]['BONUS'])}
    ‚îó ‚ö° –ë—ã—Å—Ç—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {count_all_transactions[ServiceType.FAST_MESSAGES]['BONUS']} {calculate_percentage_difference(is_all_time, count_all_transactions[ServiceType.FAST_MESSAGES]['BONUS'], count_all_transactions_before[ServiceType.FAST_MESSAGES]['BONUS'])}
‚îÅ 2Ô∏è‚É£ <b>–ü—Ä–æ–º–æ–∫–æ–¥—ã:</b>
    ‚îó –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: {count_activated_promo_codes} {calculate_percentage_difference(is_all_time, count_activated_promo_codes, count_activated_promo_codes_before)}

üîç –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ –±–æ–Ω—É—Å–∞—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º! üöÄ
"""

    @staticmethod
    def statistics_expenses(
        period: str,
        count_expense_money: Dict,
        count_expense_money_before: Dict,
    ):
        is_all_time = period == '–≤—Å—ë –≤—Ä–µ–º—è'
        emojis = Subscription.get_emojis()

        return f"""
#statistics #expenses

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!</b>

üìâ <b>–†–∞—Å—Ö–æ–¥—ã</b>
‚îÅ 1Ô∏è‚É£ <b>AI –º–æ–¥–µ–ª–∏:</b>
    ‚î£ {Texts.CHATGPT3_TURBO}: ${round(count_expense_money[ServiceType.CHAT_GPT3_TURBO], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.CHAT_GPT3_TURBO], count_expense_money_before[ServiceType.CHAT_GPT3_TURBO])}
    ‚î£ {Texts.CHATGPT4_TURBO}: ${round(count_expense_money[ServiceType.CHAT_GPT4_TURBO], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.CHAT_GPT4_TURBO], count_expense_money_before[ServiceType.CHAT_GPT4_TURBO])}
    ‚î£ {Texts.CHATGPT4_OMNI}: ${round(count_expense_money[ServiceType.CHAT_GPT4_OMNI], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.CHAT_GPT4_OMNI], count_expense_money_before[ServiceType.CHAT_GPT4_OMNI])}
    ‚î£ {Texts.CLAUDE_3_SONNET}: ${round(count_expense_money[ServiceType.CLAUDE_3_SONNET], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.CLAUDE_3_SONNET], count_expense_money_before[ServiceType.CLAUDE_3_SONNET])}
    ‚î£ {Texts.CLAUDE_3_OPUS}: ${round(count_expense_money[ServiceType.CLAUDE_3_OPUS], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.CLAUDE_3_OPUS], count_expense_money_before[ServiceType.CLAUDE_3_OPUS])}
    ‚î£ {Texts.DALL_E}: ${round(count_expense_money[ServiceType.DALL_E], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.DALL_E], count_expense_money_before[ServiceType.DALL_E])}
    ‚î£ {Texts.MIDJOURNEY}: ${round(count_expense_money[ServiceType.MIDJOURNEY], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.MIDJOURNEY], count_expense_money_before[ServiceType.MIDJOURNEY])}
    ‚î£ {Texts.FACE_SWAP}: ${round(count_expense_money[ServiceType.FACE_SWAP], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.FACE_SWAP], count_expense_money_before[ServiceType.FACE_SWAP])}
    ‚î£ {Texts.MUSIC_GEN}: ${round(count_expense_money[ServiceType.MUSIC_GEN], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.MUSIC_GEN], count_expense_money_before[ServiceType.MUSIC_GEN])}
    ‚îó {Texts.SUNO}: ${round(count_expense_money[ServiceType.SUNO], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.SUNO], count_expense_money_before[ServiceType.SUNO])}
‚îÅ 2Ô∏è‚É£ <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ:</b>
    ‚î£ üéô –ì–æ–ª–æ—Å–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã/–æ—Ç–≤–µ—Ç—ã: ${round(count_expense_money[ServiceType.VOICE_MESSAGES], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.VOICE_MESSAGES], count_expense_money_before[ServiceType.VOICE_MESSAGES])}
    ‚î£ üíª –°–µ—Ä–≤–µ—Ä: ${round(count_expense_money[ServiceType.SERVER], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.SERVER], count_expense_money_before[ServiceType.SERVER])}
    ‚îó üóÑ –ë–∞–∑–∞ –î–∞–Ω–Ω—ã—Ö: ${round(count_expense_money[ServiceType.DATABASE], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[ServiceType.DATABASE], count_expense_money_before[ServiceType.DATABASE])}
‚îÅ 3Ô∏è‚É£ <b>–í —Å—Ä–µ–¥–Ω–µ–º –Ω–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞:</b>
    ‚î£ <b>{SubscriptionType.FREE} {emojis[SubscriptionType.FREE]}:</b> ${round(count_expense_money[SubscriptionType.FREE], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[SubscriptionType.FREE], count_expense_money_before[SubscriptionType.FREE])}
    ‚î£ <b>{SubscriptionType.STANDARD} {emojis[SubscriptionType.STANDARD]}:</b> ${round(count_expense_money[SubscriptionType.STANDARD], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[SubscriptionType.STANDARD], count_expense_money_before[SubscriptionType.STANDARD])}
    ‚î£ <b>{SubscriptionType.VIP} {emojis[SubscriptionType.VIP]}:</b> ${round(count_expense_money[SubscriptionType.VIP], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[SubscriptionType.VIP], count_expense_money_before[SubscriptionType.VIP])}
    ‚îó <b>{SubscriptionType.PREMIUM} {emojis[SubscriptionType.PREMIUM]}:</b> ${round(count_expense_money[SubscriptionType.PREMIUM], 2)} {calculate_percentage_difference(is_all_time, count_expense_money[SubscriptionType.PREMIUM], count_expense_money_before[SubscriptionType.PREMIUM])}
‚îÅ <b>–í—Å–µ–≥–æ:</b> ${round(count_expense_money['ALL'], 2)} {calculate_percentage_difference(is_all_time, count_expense_money['ALL'], count_expense_money_before['ALL'])}

üîç –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ —Ä–∞—Å—Ö–æ–¥–∞—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º! üöÄ
"""

    @staticmethod
    def statistics_incomes(
        period: str,
        count_income_money: Dict,
        count_income_money_before: Dict,
    ):
        is_all_time = period == '–≤—Å—ë –≤—Ä–µ–º—è'
        emojis = Subscription.get_emojis()

        return f"""
#statistics #incomes

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period} –≥–æ—Ç–æ–≤–∞!</b>

üìà <b>–î–æ—Ö–æ–¥—ã</b>
‚îÅ 1Ô∏è‚É£ <b>–ü–æ–¥–ø–∏—Å–∫–∏:</b>
    ‚î£ {ServiceType.STANDARD} {emojis[ServiceType.STANDARD]}: {count_income_money[ServiceType.STANDARD]}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.STANDARD], count_income_money_before[ServiceType.STANDARD])}
    ‚î£ {ServiceType.VIP} {emojis[ServiceType.VIP]}: {count_income_money[ServiceType.VIP]}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.VIP], count_income_money_before[ServiceType.VIP])}
    ‚î£ {ServiceType.PREMIUM} {emojis[ServiceType.PREMIUM]}: {count_income_money[ServiceType.PREMIUM]}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.PREMIUM], count_income_money_before[ServiceType.PREMIUM])}
‚îÅ 2Ô∏è‚É£ <b>–ü–∞–∫–µ—Ç—ã:</b>
    ‚î£ {Texts.CHATGPT3_TURBO}: {round(count_income_money[ServiceType.CHAT_GPT3_TURBO], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.CHAT_GPT3_TURBO], count_income_money_before[ServiceType.CHAT_GPT3_TURBO])}
    ‚î£ {Texts.CHATGPT4_TURBO}: {round(count_income_money[ServiceType.CHAT_GPT4_TURBO], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.CHAT_GPT4_TURBO], count_income_money_before[ServiceType.CHAT_GPT4_TURBO])}
    ‚î£ {Texts.CHATGPT4_OMNI}: {round(count_income_money[ServiceType.CHAT_GPT4_OMNI], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.CHAT_GPT4_OMNI], count_income_money_before[ServiceType.CHAT_GPT4_OMNI])}
    ‚î£ {Texts.CLAUDE_3_SONNET}: {round(count_income_money[ServiceType.CLAUDE_3_SONNET], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.CLAUDE_3_SONNET], count_income_money_before[ServiceType.CLAUDE_3_SONNET])}
    ‚î£ {Texts.CLAUDE_3_OPUS}: {round(count_income_money[ServiceType.CLAUDE_3_OPUS], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.CLAUDE_3_OPUS], count_income_money_before[ServiceType.CLAUDE_3_OPUS])}
    ‚î£ {Texts.DALL_E}: {round(count_income_money[ServiceType.DALL_E], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.DALL_E], count_income_money_before[ServiceType.DALL_E])}
    ‚î£ {Texts.MIDJOURNEY}: {round(count_income_money[ServiceType.MIDJOURNEY], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.MIDJOURNEY], count_income_money_before[ServiceType.MIDJOURNEY])}
    ‚î£ {Texts.FACE_SWAP}: {round(count_income_money[ServiceType.FACE_SWAP], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.FACE_SWAP], count_income_money_before[ServiceType.FACE_SWAP])}
    ‚î£ {Texts.MUSIC_GEN}: {round(count_income_money[ServiceType.MUSIC_GEN], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.MUSIC_GEN], count_income_money_before[ServiceType.MUSIC_GEN])}
    ‚î£ {Texts.SUNO}: {round(count_income_money[ServiceType.SUNO], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.SUNO], count_income_money_before[ServiceType.SUNO])}
    ‚î£ üí¨ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —á–∞—Ç—ã: {round(count_income_money[ServiceType.ADDITIONAL_CHATS], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.ADDITIONAL_CHATS], count_income_money_before[ServiceType.ADDITIONAL_CHATS])}
    ‚î£ üé≠ –î–æ—Å—Ç—É–ø –∫ –∫–∞—Ç–∞–ª–æ–≥—É: {round(count_income_money[ServiceType.ACCESS_TO_CATALOG], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.ACCESS_TO_CATALOG], count_income_money_before[ServiceType.ACCESS_TO_CATALOG])}
    ‚î£ üéô –ì–æ–ª–æ—Å–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã/–æ—Ç–≤–µ—Ç—ã: {round(count_income_money[ServiceType.VOICE_MESSAGES], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.VOICE_MESSAGES], count_income_money_before[ServiceType.VOICE_MESSAGES])}
    ‚îó ‚ö° –ë—ã—Å—Ç—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {round(count_income_money[ServiceType.FAST_MESSAGES], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money[ServiceType.FAST_MESSAGES], count_income_money_before[ServiceType.FAST_MESSAGES])}
‚îÅ <b>–í—Å–µ–≥–æ:</b> {round(count_income_money['ALL'], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money['ALL'], count_income_money_before['ALL'])}
‚îÅ <b>–í–∞–ª:</b> {round(count_income_money['VAL'], 2)}‚ÇΩ {calculate_percentage_difference(is_all_time, count_income_money['VAL'], count_income_money_before['VAL'])}

üîç –≠—Ç–æ –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ –¥–æ—Ö–æ–¥–∞—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–ø–µ—Ä—ë–¥, –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º! üöÄ
"""

    # Blast
    @staticmethod
    def blast_confirmation(
        blast_letters: Dict,
    ):
        letters = ""
        for i, (language_code, letter) in enumerate(blast_letters.items()):
            letters += f'{language_code}:\n{letter}'
            letters += '\n' if i < len(blast_letters.items()) - 1 else ''

        return f"""
üì¢ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ –ø–µ—Ä–µ–¥ –≤–µ–ª–∏–∫–∏–º –∑–∞–ø—É—Å–∫–æ–º!</b> üöÄ

ü§ñ –¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:
{letters}

–ï—Å–ª–∏ –≤—Å–µ –≤—ã–≥–ª—è–¥–∏—Ç –∏–¥–µ–∞–ª—å–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", –∞ –µ—Å–ª–∏ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∫–∏, –≤—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–º–µ–Ω–∏—Ç—å" üåü
"""

    @staticmethod
    def catalog_manage_create_role_confirmation(
        role_system_name: str,
        role_names: Dict,
        role_descriptions: Dict,
        role_instructions: Dict,
    ):
        names = ""
        for i, (language_code, name) in enumerate(role_names.items()):
            names += f'{language_code}: {name}'
            names += '\n' if i < len(role_names.items()) - 1 else ''
        descriptions = ""
        for i, (language_code, description) in enumerate(role_descriptions.items()):
            descriptions += f'{language_code}: {description}'
            descriptions += '\n' if i < len(role_descriptions.items()) - 1 else ''
        instructions = ""
        for i, (language_code, instruction) in enumerate(role_instructions.items()):
            instructions += f'{language_code}: {instruction}'
            instructions += '\n' if i < len(role_instructions.items()) - 1 else ''

        return f"""
üé© <b>–í–æ—Ç —á—Ç–æ –≤—ã —Å–æ–∑–¥–∞–ª–∏:</b>

ü§ñ –°–∏—Å—Ç–µ–º–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:
{role_system_name}

üåç –ò–º–µ–Ω–∞:
{names}

üí¨ –û–ø–∏—Å–∞–Ω–∏—è:
{descriptions}

üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:
{instructions}

–ï—Å–ª–∏ –≤—Å–µ –≤—ã–≥–ª—è–¥–∏—Ç –∏–¥–µ–∞–ª—å–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", –∞ –µ—Å–ª–∏ –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∫–∏, –≤—ã–±–µ—Ä–∏—Ç–µ "–û—Ç–º–µ–Ω–∏—Ç—å" üåü
"""

    @staticmethod
    def catalog_manage_role_edit(
        role_system_name: str,
        role_names: Dict,
        role_descriptions: Dict,
        role_instructions: Dict,
    ):
        names = ""
        for i, (language_code, name) in enumerate(role_names.items()):
            names += f'{language_code}: {name}'
            names += '\n' if i < len(role_names.items()) - 1 else ''
        descriptions = ""
        for i, (language_code, description) in enumerate(role_descriptions.items()):
            descriptions += f'{language_code}: {description}'
            descriptions += '\n' if i < len(role_descriptions.items()) - 1 else ''
        instructions = ""
        for i, (language_code, instruction) in enumerate(role_instructions.items()):
            instructions += f'{language_code}: {instruction}'
            instructions += '\n' if i < len(role_instructions.items()) - 1 else ''

        return f"""
üé® <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–∏</b> üñåÔ∏è

üîß –í—ã —Ä–µ—à–∏–ª–∏ –æ—Ç–ø–æ–ª–∏—Ä–æ–≤–∞—Ç—å <b>{role_system_name}</b>! –ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –µ–≥–æ –≤ –Ω–∞—Å—Ç–æ—è—â—É—é –∑–≤–µ–∑–¥—É AI-–º–∏—Ä–∞ üåü

üåç <b>–ò–º–µ–Ω–∞:</b>
{names}

üí¨ <b>–û–ø–∏—Å–∞–Ω–∏—è:</b>
{descriptions}

üìú <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</b>
{instructions}

üõ†Ô∏è –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –æ—á–µ—Ä–µ–¥—å –≤–Ω–µ—Å—Ç–∏ –º–∞–≥–∏—é! –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:
- "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è" üìù
- "–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ" üìñ
- "–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é" üóíÔ∏è
- "–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é" üñº
- "–ù–∞–∑–∞–¥" üîô
"""

    @staticmethod
    def face_swap_manage_create_package_confirmation(
        package_system_name: str,
        package_names: Dict,
    ):
        names = ""
        for i, (language_code, name) in enumerate(package_names.items()):
            names += f'{language_code}: {name}'
            names += '\n' if i < len(package_names.items()) - 1 else ''

        return f"""
üåü <b>–í–æ—Ç –∏ –≤—Å—ë! –í–∞—à –Ω–æ–≤—ã–π –ø–∞–∫–µ—Ç FaceSwap –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ –∫ –¥–µ–±—é—Ç—É!</b> üéâ

üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –¥–µ—Ç–∞–ª–∏:
- ü§ñ <b>–°–∏—Å—Ç–µ–º–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:</b>
{package_system_name}

- üåç <b>–ò–º–µ–Ω–∞:</b>
{names}

üîç –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –≤–µ—Ä–Ω–æ. –≠—Ç–æ –≤–∞—à–µ —Ç–≤–æ—Ä–µ–Ω–∏–µ, –∏ –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–º!

üëá –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ
"""

    @staticmethod
    def profile(
        subscription_type: SubscriptionType,
        subscription_status: SubscriptionStatus,
        gender: UserGender,
        current_model: Model,
        current_model_version: str,
        monthly_limits,
        additional_usage_quota,
        renewal_date,
        credits: str,
    ) -> str:
        raise NotImplementedError

    # Payment
    @staticmethod
    def payment_description_subscription(user_id: str, subscription_type: SubscriptionType):
        raise NotImplementedError

    @staticmethod
    def payment_description_renew_subscription(user_id: str, subscription_type: SubscriptionType):
        raise NotImplementedError

    @staticmethod
    def subscribe(currency: Currency, min_prices: Dict) -> str:
        raise NotImplementedError

    @staticmethod
    def choose_how_many_months_to_subscribe(subscription_type: SubscriptionType) -> str:
        raise NotImplementedError

    @staticmethod
    def cycles_subscribe() -> str:
        raise NotImplementedError

    @staticmethod
    def confirmation_subscribe(subscription_type: SubscriptionType, currency: Currency, price: float) -> str:
        raise NotImplementedError

    @staticmethod
    def payment_description_package(user_id: str, package_name: str, package_quantity: int):
        raise NotImplementedError

    @staticmethod
    def payment_description_cart(user_id: str):
        raise NotImplementedError

    @staticmethod
    def package(currency: Currency, page: int) -> str:
        raise NotImplementedError

    @staticmethod
    def get_package_name_and_quantity_by_package_type(package_type: PackageType):
        raise NotImplementedError

    @staticmethod
    def choose_min(package_type: PackageType) -> str:
        raise NotImplementedError

    @staticmethod
    def shopping_cart(currency: Currency, cart_items: List[Dict], discount: int):
        raise NotImplementedError

    @staticmethod
    def confirmation_package(package_name: str, package_quantity: int, currency: Currency, price: float) -> str:
        raise NotImplementedError

    @staticmethod
    def confirmation_cart(cart_items: List[Dict], currency: Currency, price: float) -> str:
        raise NotImplementedError

    # Chats
    @staticmethod
    def chats(current_chat_name: str, total_chats: int, available_to_create_chats: int) -> str:
        raise NotImplementedError

    # FaceSwap
    @staticmethod
    def choose_face_swap_package(name: str, available_images: int, total_images: int, used_images: int) -> str:
        raise NotImplementedError

    @staticmethod
    def face_swap_package_forbidden(available_images: int) -> str:
        raise NotImplementedError

    # MusicGen
    @staticmethod
    def music_gen_forbidden(available_seconds: int) -> str:
        raise NotImplementedError

    # AI
    @staticmethod
    def switched(model: Model, model_version: str):
        raise NotImplementedError

    @staticmethod
    def requests_recommendations() -> List[str]:
        raise NotImplementedError

    @staticmethod
    def image_recommendations() -> List[str]:
        raise NotImplementedError

    @staticmethod
    def music_recommendations() -> List[str]:
        raise NotImplementedError

    @staticmethod
    def wait_for_another_request(seconds: int) -> str:
        raise NotImplementedError

    @staticmethod
    def processing_request_text() -> str:
        raise NotImplementedError

    @staticmethod
    def processing_request_image() -> str:
        raise NotImplementedError

    @staticmethod
    def processing_request_face_swap() -> str:
        raise NotImplementedError

    @staticmethod
    def processing_request_music() -> str:
        raise NotImplementedError

    @staticmethod
    def processing_statistics() -> str:
        texts = [
            "–í—ã–∑—ã–≤–∞—é –∫–∏–±–µ—Ä–Ω–µ—Ç–∏—á–µ—Å–∫–∏—Ö —É—Ç–æ–∫, —á—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å. –ö—Ä—è-–∫—Ä—è, –∏ –¥–∞–Ω–Ω—ã–µ —É –Ω–∞—Å! ü¶Üüíª",
            "–ò—Å–ø–æ–ª—å–∑—É—é —Ç–∞–π–Ω—ã–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –∫–æ–¥–∞, —á—Ç–æ–±—ã –≤—ã–∑–≤–æ–ª–∏—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –ø—É—á–∏–Ω—ã –¥–∞–Ω–Ω—ã—Ö. –ê–±—Ä–∞–∫–∞–¥–∞–±—Ä–∞! üßô‚Äçüíæ",
            "–¢–∞–π–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —á–∞–π–Ω–∏–∫ –Ω–∞ –ø–ª–∏—Ç–µ. –ü–æ–∫–∞ —è –≥–æ—Ç–æ–≤–ª—é —á–∞–π, –¥–∞–Ω–Ω—ã–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è —Å–∞–º–∏! ‚òïüìä",
            "–ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –∫–æ—Å–º–∏—á–µ—Å–∫–∏–º —Å–ø—É—Ç–Ω–∏–∫–∞–º, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –í–æ—Ç —ç—Ç–æ –∑–≤—ë–∑–¥–Ω—ã–π –ø–æ–∏—Å–∫! üõ∞Ô∏è‚ú®",
            "–ó–æ–≤—É –Ω–∞ –ø–æ–º–æ—â—å –∞—Ä–º–∏—é –ø–∏–∫—Å–µ–ª–µ–π. –û–Ω–∏ —É–∂–µ –º–∞—Ä—à–∏—Ä—É—é—Ç —Å–∫–≤–æ–∑—å —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –¥–∞–Ω–Ω—ã–µ! ü™ñüñ•Ô∏è",
        ]

        return random.choice(texts)

    # Settings
    @staticmethod
    def settings(human_model: str, current_model: Model, dall_e_cost=1) -> str:
        raise NotImplementedError

    # Bonus
    @staticmethod
    def bonus(user_id: str, balance: float, referred_count: int, feedback_count: int) -> str:
        raise NotImplementedError

    @staticmethod
    def referral_link(user_id: str, is_share: bool) -> str:
        if is_share:
            return f"https://t.me/share/url?url=https://t.me/GPTsTurboBot?start={user_id}"
        return f"https://t.me/GPTsTurboBot?start={user_id}"
